/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif

void my_delay(uint32_t cycles) {

	while(cycles)
		cycless--;

	return;
}


int main(void)
{
	uint32_t *pClkCtrlreg = (uint32_t *)0x40023830;

	uint32_t *pPortDModeReg = (uint32_t *)0X40020C00;

	uint32_t *pPortDOutReg = (uint32_t *)0X40020C14;

// 1. enable the clock for GPOID peripheral in the AHB1ENR

//	*pClkCtrlreg |= 0x08; // enable clock for GPIOD
	*pClkCtrlreg |= 1 << 3;

//	2. configure the pin as output
//	*pPortDModeReg &= ~0x03000000;
//	*pPortDModeReg |= 0x01000000;

	// second method:
	*pPortDModeReg &= ~(0b11) << 24;
	*pPortDModeReg |= 0b01 << 24;

//// 3. SET 12th bit of the output data register to make I/O pin-12 HIGH
//	*pPortDOutReg |= 1 << 12;


    /* Loop forever */
	for(;;) {
		*pPortDOutReg ^= 1 << 12;

		delay(100000);
	}
}
