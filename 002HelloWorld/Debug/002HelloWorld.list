
002HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001284  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  08001414  08001414  00002414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001454  08001454  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800145c  0800145c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800145c  0800145c  0000245c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001460  08001460  00002460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001464  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000020c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000268  20000268  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000007a5  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002de  00000000  00000000  00003831  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000e0  00000000  00000000  00003b10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000094  00000000  00000000  00003bf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bc1  00000000  00000000  00003c84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001364  00000000  00000000  00006845  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009888  00000000  00000000  00007ba9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00011431  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000d8c  00000000  00000000  00011474  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000008f  00000000  00000000  00012200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080013fc 	.word	0x080013fc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080013fc 	.word	0x080013fc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:

extern void initialise_monitor_handles(void);


int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0


	printf("Hello world!");
 8000274:	4802      	ldr	r0, [pc, #8]	@ (8000280 <main+0x10>)
 8000276:	f000 f999 	bl	80005ac <iprintf>

    /* Loop forever */
	for(;;);
 800027a:	bf00      	nop
 800027c:	e7fd      	b.n	800027a <main+0xa>
 800027e:	bf00      	nop
 8000280:	08001414 	.word	0x08001414

08000284 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000284:	b480      	push	{r7}
 8000286:	b083      	sub	sp, #12
 8000288:	af00      	add	r7, sp, #0
 800028a:	4603      	mov	r3, r0
 800028c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800028e:	4b0f      	ldr	r3, [pc, #60]	@ (80002cc <ITM_SendChar+0x48>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	4a0e      	ldr	r2, [pc, #56]	@ (80002cc <ITM_SendChar+0x48>)
 8000294:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000298:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800029a:	4b0d      	ldr	r3, [pc, #52]	@ (80002d0 <ITM_SendChar+0x4c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a0c      	ldr	r2, [pc, #48]	@ (80002d0 <ITM_SendChar+0x4c>)
 80002a0:	f043 0301 	orr.w	r3, r3, #1
 80002a4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002a6:	bf00      	nop
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f003 0301 	and.w	r3, r3, #1
 80002b2:	2b00      	cmp	r3, #0
 80002b4:	d0f8      	beq.n	80002a8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002b6:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80002ba:	79fb      	ldrb	r3, [r7, #7]
 80002bc:	6013      	str	r3, [r2, #0]
}
 80002be:	bf00      	nop
 80002c0:	370c      	adds	r7, #12
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	e000edfc 	.word	0xe000edfc
 80002d0:	e0000e00 	.word	0xe0000e00

080002d4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	e00a      	b.n	80002fc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002e6:	f3af 8000 	nop.w
 80002ea:	4601      	mov	r1, r0
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	b2ca      	uxtb	r2, r1
 80002f4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3301      	adds	r3, #1
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	697a      	ldr	r2, [r7, #20]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	429a      	cmp	r2, r3
 8000302:	dbf0      	blt.n	80002e6 <_read+0x12>
  }

  return len;
 8000304:	687b      	ldr	r3, [r7, #4]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3718      	adds	r7, #24
 800030a:	46bd      	mov	sp, r7
 800030c:	bd80      	pop	{r7, pc}

0800030e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030e:	b580      	push	{r7, lr}
 8000310:	b086      	sub	sp, #24
 8000312:	af00      	add	r7, sp, #0
 8000314:	60f8      	str	r0, [r7, #12]
 8000316:	60b9      	str	r1, [r7, #8]
 8000318:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	2300      	movs	r3, #0
 800031c:	617b      	str	r3, [r7, #20]
 800031e:	e009      	b.n	8000334 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	4618      	mov	r0, r3
 800032a:	f7ff ffab 	bl	8000284 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf1      	blt.n	8000320 <_write+0x12>
  }
  return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_fstat>:
//  return -1;
//}


int _fstat(int file, struct stat *st)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
 800034e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000350:	683b      	ldr	r3, [r7, #0]
 8000352:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000356:	605a      	str	r2, [r3, #4]
  return 0;
 8000358:	2300      	movs	r3, #0
}
 800035a:	4618      	mov	r0, r3
 800035c:	370c      	adds	r7, #12
 800035e:	46bd      	mov	sp, r7
 8000360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000364:	4770      	bx	lr
	...

08000368 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000370:	4a14      	ldr	r2, [pc, #80]	@ (80003c4 <_sbrk+0x5c>)
 8000372:	4b15      	ldr	r3, [pc, #84]	@ (80003c8 <_sbrk+0x60>)
 8000374:	1ad3      	subs	r3, r2, r3
 8000376:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000378:	697b      	ldr	r3, [r7, #20]
 800037a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800037c:	4b13      	ldr	r3, [pc, #76]	@ (80003cc <_sbrk+0x64>)
 800037e:	681b      	ldr	r3, [r3, #0]
 8000380:	2b00      	cmp	r3, #0
 8000382:	d102      	bne.n	800038a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000384:	4b11      	ldr	r3, [pc, #68]	@ (80003cc <_sbrk+0x64>)
 8000386:	4a12      	ldr	r2, [pc, #72]	@ (80003d0 <_sbrk+0x68>)
 8000388:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800038a:	4b10      	ldr	r3, [pc, #64]	@ (80003cc <_sbrk+0x64>)
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4413      	add	r3, r2
 8000392:	693a      	ldr	r2, [r7, #16]
 8000394:	429a      	cmp	r2, r3
 8000396:	d207      	bcs.n	80003a8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000398:	f000 f9ac 	bl	80006f4 <__errno>
 800039c:	4603      	mov	r3, r0
 800039e:	220c      	movs	r2, #12
 80003a0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003a2:	f04f 33ff 	mov.w	r3, #4294967295
 80003a6:	e009      	b.n	80003bc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003a8:	4b08      	ldr	r3, [pc, #32]	@ (80003cc <_sbrk+0x64>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003ae:	4b07      	ldr	r3, [pc, #28]	@ (80003cc <_sbrk+0x64>)
 80003b0:	681a      	ldr	r2, [r3, #0]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4413      	add	r3, r2
 80003b6:	4a05      	ldr	r2, [pc, #20]	@ (80003cc <_sbrk+0x64>)
 80003b8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003ba:	68fb      	ldr	r3, [r7, #12]
}
 80003bc:	4618      	mov	r0, r3
 80003be:	3718      	adds	r7, #24
 80003c0:	46bd      	mov	sp, r7
 80003c2:	bd80      	pop	{r7, pc}
 80003c4:	20020000 	.word	0x20020000
 80003c8:	00000400 	.word	0x00000400
 80003cc:	20000078 	.word	0x20000078
 80003d0:	20000268 	.word	0x20000268

080003d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003d4:	480d      	ldr	r0, [pc, #52]	@ (800040c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003dc:	480c      	ldr	r0, [pc, #48]	@ (8000410 <LoopForever+0x6>)
  ldr r1, =_edata
 80003de:	490d      	ldr	r1, [pc, #52]	@ (8000414 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000418 <LoopForever+0xe>)
  movs r3, #0
 80003e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e4:	e002      	b.n	80003ec <LoopCopyDataInit>

080003e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ea:	3304      	adds	r3, #4

080003ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003f0:	d3f9      	bcc.n	80003e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003f2:	4a0a      	ldr	r2, [pc, #40]	@ (800041c <LoopForever+0x12>)
  ldr r4, =_ebss
 80003f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000420 <LoopForever+0x16>)
  movs r3, #0
 80003f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f8:	e001      	b.n	80003fe <LoopFillZerobss>

080003fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003fc:	3204      	adds	r2, #4

080003fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000400:	d3fb      	bcc.n	80003fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000402:	f000 f97d 	bl	8000700 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000406:	f7ff ff33 	bl	8000270 <main>

0800040a <LoopForever>:

LoopForever:
  b LoopForever
 800040a:	e7fe      	b.n	800040a <LoopForever>
  ldr   r0, =_estack
 800040c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000410:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000414:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000418:	08001464 	.word	0x08001464
  ldr r2, =_sbss
 800041c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000420:	20000268 	.word	0x20000268

08000424 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000424:	e7fe      	b.n	8000424 <ADC_IRQHandler>
	...

08000428 <std>:
 8000428:	2300      	movs	r3, #0
 800042a:	b510      	push	{r4, lr}
 800042c:	4604      	mov	r4, r0
 800042e:	e9c0 3300 	strd	r3, r3, [r0]
 8000432:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000436:	6083      	str	r3, [r0, #8]
 8000438:	8181      	strh	r1, [r0, #12]
 800043a:	6643      	str	r3, [r0, #100]	@ 0x64
 800043c:	81c2      	strh	r2, [r0, #14]
 800043e:	6183      	str	r3, [r0, #24]
 8000440:	4619      	mov	r1, r3
 8000442:	2208      	movs	r2, #8
 8000444:	305c      	adds	r0, #92	@ 0x5c
 8000446:	f000 f906 	bl	8000656 <memset>
 800044a:	4b0d      	ldr	r3, [pc, #52]	@ (8000480 <std+0x58>)
 800044c:	6263      	str	r3, [r4, #36]	@ 0x24
 800044e:	4b0d      	ldr	r3, [pc, #52]	@ (8000484 <std+0x5c>)
 8000450:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000452:	4b0d      	ldr	r3, [pc, #52]	@ (8000488 <std+0x60>)
 8000454:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000456:	4b0d      	ldr	r3, [pc, #52]	@ (800048c <std+0x64>)
 8000458:	6323      	str	r3, [r4, #48]	@ 0x30
 800045a:	4b0d      	ldr	r3, [pc, #52]	@ (8000490 <std+0x68>)
 800045c:	6224      	str	r4, [r4, #32]
 800045e:	429c      	cmp	r4, r3
 8000460:	d006      	beq.n	8000470 <std+0x48>
 8000462:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000466:	4294      	cmp	r4, r2
 8000468:	d002      	beq.n	8000470 <std+0x48>
 800046a:	33d0      	adds	r3, #208	@ 0xd0
 800046c:	429c      	cmp	r4, r3
 800046e:	d105      	bne.n	800047c <std+0x54>
 8000470:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000478:	f000 b966 	b.w	8000748 <__retarget_lock_init_recursive>
 800047c:	bd10      	pop	{r4, pc}
 800047e:	bf00      	nop
 8000480:	080005d1 	.word	0x080005d1
 8000484:	080005f3 	.word	0x080005f3
 8000488:	0800062b 	.word	0x0800062b
 800048c:	0800064f 	.word	0x0800064f
 8000490:	2000007c 	.word	0x2000007c

08000494 <stdio_exit_handler>:
 8000494:	4a02      	ldr	r2, [pc, #8]	@ (80004a0 <stdio_exit_handler+0xc>)
 8000496:	4903      	ldr	r1, [pc, #12]	@ (80004a4 <stdio_exit_handler+0x10>)
 8000498:	4803      	ldr	r0, [pc, #12]	@ (80004a8 <stdio_exit_handler+0x14>)
 800049a:	f000 b869 	b.w	8000570 <_fwalk_sglue>
 800049e:	bf00      	nop
 80004a0:	20000000 	.word	0x20000000
 80004a4:	08000fe5 	.word	0x08000fe5
 80004a8:	20000010 	.word	0x20000010

080004ac <cleanup_stdio>:
 80004ac:	6841      	ldr	r1, [r0, #4]
 80004ae:	4b0c      	ldr	r3, [pc, #48]	@ (80004e0 <cleanup_stdio+0x34>)
 80004b0:	4299      	cmp	r1, r3
 80004b2:	b510      	push	{r4, lr}
 80004b4:	4604      	mov	r4, r0
 80004b6:	d001      	beq.n	80004bc <cleanup_stdio+0x10>
 80004b8:	f000 fd94 	bl	8000fe4 <_fflush_r>
 80004bc:	68a1      	ldr	r1, [r4, #8]
 80004be:	4b09      	ldr	r3, [pc, #36]	@ (80004e4 <cleanup_stdio+0x38>)
 80004c0:	4299      	cmp	r1, r3
 80004c2:	d002      	beq.n	80004ca <cleanup_stdio+0x1e>
 80004c4:	4620      	mov	r0, r4
 80004c6:	f000 fd8d 	bl	8000fe4 <_fflush_r>
 80004ca:	68e1      	ldr	r1, [r4, #12]
 80004cc:	4b06      	ldr	r3, [pc, #24]	@ (80004e8 <cleanup_stdio+0x3c>)
 80004ce:	4299      	cmp	r1, r3
 80004d0:	d004      	beq.n	80004dc <cleanup_stdio+0x30>
 80004d2:	4620      	mov	r0, r4
 80004d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004d8:	f000 bd84 	b.w	8000fe4 <_fflush_r>
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	bf00      	nop
 80004e0:	2000007c 	.word	0x2000007c
 80004e4:	200000e4 	.word	0x200000e4
 80004e8:	2000014c 	.word	0x2000014c

080004ec <global_stdio_init.part.0>:
 80004ec:	b510      	push	{r4, lr}
 80004ee:	4b0b      	ldr	r3, [pc, #44]	@ (800051c <global_stdio_init.part.0+0x30>)
 80004f0:	4c0b      	ldr	r4, [pc, #44]	@ (8000520 <global_stdio_init.part.0+0x34>)
 80004f2:	4a0c      	ldr	r2, [pc, #48]	@ (8000524 <global_stdio_init.part.0+0x38>)
 80004f4:	601a      	str	r2, [r3, #0]
 80004f6:	4620      	mov	r0, r4
 80004f8:	2200      	movs	r2, #0
 80004fa:	2104      	movs	r1, #4
 80004fc:	f7ff ff94 	bl	8000428 <std>
 8000500:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000504:	2201      	movs	r2, #1
 8000506:	2109      	movs	r1, #9
 8000508:	f7ff ff8e 	bl	8000428 <std>
 800050c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000510:	2202      	movs	r2, #2
 8000512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000516:	2112      	movs	r1, #18
 8000518:	f7ff bf86 	b.w	8000428 <std>
 800051c:	200001b4 	.word	0x200001b4
 8000520:	2000007c 	.word	0x2000007c
 8000524:	08000495 	.word	0x08000495

08000528 <__sfp_lock_acquire>:
 8000528:	4801      	ldr	r0, [pc, #4]	@ (8000530 <__sfp_lock_acquire+0x8>)
 800052a:	f000 b90e 	b.w	800074a <__retarget_lock_acquire_recursive>
 800052e:	bf00      	nop
 8000530:	200001bd 	.word	0x200001bd

08000534 <__sfp_lock_release>:
 8000534:	4801      	ldr	r0, [pc, #4]	@ (800053c <__sfp_lock_release+0x8>)
 8000536:	f000 b909 	b.w	800074c <__retarget_lock_release_recursive>
 800053a:	bf00      	nop
 800053c:	200001bd 	.word	0x200001bd

08000540 <__sinit>:
 8000540:	b510      	push	{r4, lr}
 8000542:	4604      	mov	r4, r0
 8000544:	f7ff fff0 	bl	8000528 <__sfp_lock_acquire>
 8000548:	6a23      	ldr	r3, [r4, #32]
 800054a:	b11b      	cbz	r3, 8000554 <__sinit+0x14>
 800054c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000550:	f7ff bff0 	b.w	8000534 <__sfp_lock_release>
 8000554:	4b04      	ldr	r3, [pc, #16]	@ (8000568 <__sinit+0x28>)
 8000556:	6223      	str	r3, [r4, #32]
 8000558:	4b04      	ldr	r3, [pc, #16]	@ (800056c <__sinit+0x2c>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	2b00      	cmp	r3, #0
 800055e:	d1f5      	bne.n	800054c <__sinit+0xc>
 8000560:	f7ff ffc4 	bl	80004ec <global_stdio_init.part.0>
 8000564:	e7f2      	b.n	800054c <__sinit+0xc>
 8000566:	bf00      	nop
 8000568:	080004ad 	.word	0x080004ad
 800056c:	200001b4 	.word	0x200001b4

08000570 <_fwalk_sglue>:
 8000570:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000574:	4607      	mov	r7, r0
 8000576:	4688      	mov	r8, r1
 8000578:	4614      	mov	r4, r2
 800057a:	2600      	movs	r6, #0
 800057c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000580:	f1b9 0901 	subs.w	r9, r9, #1
 8000584:	d505      	bpl.n	8000592 <_fwalk_sglue+0x22>
 8000586:	6824      	ldr	r4, [r4, #0]
 8000588:	2c00      	cmp	r4, #0
 800058a:	d1f7      	bne.n	800057c <_fwalk_sglue+0xc>
 800058c:	4630      	mov	r0, r6
 800058e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000592:	89ab      	ldrh	r3, [r5, #12]
 8000594:	2b01      	cmp	r3, #1
 8000596:	d907      	bls.n	80005a8 <_fwalk_sglue+0x38>
 8000598:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800059c:	3301      	adds	r3, #1
 800059e:	d003      	beq.n	80005a8 <_fwalk_sglue+0x38>
 80005a0:	4629      	mov	r1, r5
 80005a2:	4638      	mov	r0, r7
 80005a4:	47c0      	blx	r8
 80005a6:	4306      	orrs	r6, r0
 80005a8:	3568      	adds	r5, #104	@ 0x68
 80005aa:	e7e9      	b.n	8000580 <_fwalk_sglue+0x10>

080005ac <iprintf>:
 80005ac:	b40f      	push	{r0, r1, r2, r3}
 80005ae:	b507      	push	{r0, r1, r2, lr}
 80005b0:	4906      	ldr	r1, [pc, #24]	@ (80005cc <iprintf+0x20>)
 80005b2:	ab04      	add	r3, sp, #16
 80005b4:	6808      	ldr	r0, [r1, #0]
 80005b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80005ba:	6881      	ldr	r1, [r0, #8]
 80005bc:	9301      	str	r3, [sp, #4]
 80005be:	f000 f9e9 	bl	8000994 <_vfiprintf_r>
 80005c2:	b003      	add	sp, #12
 80005c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80005c8:	b004      	add	sp, #16
 80005ca:	4770      	bx	lr
 80005cc:	2000000c 	.word	0x2000000c

080005d0 <__sread>:
 80005d0:	b510      	push	{r4, lr}
 80005d2:	460c      	mov	r4, r1
 80005d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005d8:	f000 f868 	bl	80006ac <_read_r>
 80005dc:	2800      	cmp	r0, #0
 80005de:	bfab      	itete	ge
 80005e0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80005e2:	89a3      	ldrhlt	r3, [r4, #12]
 80005e4:	181b      	addge	r3, r3, r0
 80005e6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80005ea:	bfac      	ite	ge
 80005ec:	6563      	strge	r3, [r4, #84]	@ 0x54
 80005ee:	81a3      	strhlt	r3, [r4, #12]
 80005f0:	bd10      	pop	{r4, pc}

080005f2 <__swrite>:
 80005f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005f6:	461f      	mov	r7, r3
 80005f8:	898b      	ldrh	r3, [r1, #12]
 80005fa:	05db      	lsls	r3, r3, #23
 80005fc:	4605      	mov	r5, r0
 80005fe:	460c      	mov	r4, r1
 8000600:	4616      	mov	r6, r2
 8000602:	d505      	bpl.n	8000610 <__swrite+0x1e>
 8000604:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000608:	2302      	movs	r3, #2
 800060a:	2200      	movs	r2, #0
 800060c:	f000 f83c 	bl	8000688 <_lseek_r>
 8000610:	89a3      	ldrh	r3, [r4, #12]
 8000612:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000616:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800061a:	81a3      	strh	r3, [r4, #12]
 800061c:	4632      	mov	r2, r6
 800061e:	463b      	mov	r3, r7
 8000620:	4628      	mov	r0, r5
 8000622:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000626:	f000 b853 	b.w	80006d0 <_write_r>

0800062a <__sseek>:
 800062a:	b510      	push	{r4, lr}
 800062c:	460c      	mov	r4, r1
 800062e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000632:	f000 f829 	bl	8000688 <_lseek_r>
 8000636:	1c43      	adds	r3, r0, #1
 8000638:	89a3      	ldrh	r3, [r4, #12]
 800063a:	bf15      	itete	ne
 800063c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800063e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000642:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000646:	81a3      	strheq	r3, [r4, #12]
 8000648:	bf18      	it	ne
 800064a:	81a3      	strhne	r3, [r4, #12]
 800064c:	bd10      	pop	{r4, pc}

0800064e <__sclose>:
 800064e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000652:	f000 b809 	b.w	8000668 <_close_r>

08000656 <memset>:
 8000656:	4402      	add	r2, r0
 8000658:	4603      	mov	r3, r0
 800065a:	4293      	cmp	r3, r2
 800065c:	d100      	bne.n	8000660 <memset+0xa>
 800065e:	4770      	bx	lr
 8000660:	f803 1b01 	strb.w	r1, [r3], #1
 8000664:	e7f9      	b.n	800065a <memset+0x4>
	...

08000668 <_close_r>:
 8000668:	b538      	push	{r3, r4, r5, lr}
 800066a:	4d06      	ldr	r5, [pc, #24]	@ (8000684 <_close_r+0x1c>)
 800066c:	2300      	movs	r3, #0
 800066e:	4604      	mov	r4, r0
 8000670:	4608      	mov	r0, r1
 8000672:	602b      	str	r3, [r5, #0]
 8000674:	f000 fe7e 	bl	8001374 <_close>
 8000678:	1c43      	adds	r3, r0, #1
 800067a:	d102      	bne.n	8000682 <_close_r+0x1a>
 800067c:	682b      	ldr	r3, [r5, #0]
 800067e:	b103      	cbz	r3, 8000682 <_close_r+0x1a>
 8000680:	6023      	str	r3, [r4, #0]
 8000682:	bd38      	pop	{r3, r4, r5, pc}
 8000684:	200001b8 	.word	0x200001b8

08000688 <_lseek_r>:
 8000688:	b538      	push	{r3, r4, r5, lr}
 800068a:	4d07      	ldr	r5, [pc, #28]	@ (80006a8 <_lseek_r+0x20>)
 800068c:	4604      	mov	r4, r0
 800068e:	4608      	mov	r0, r1
 8000690:	4611      	mov	r1, r2
 8000692:	2200      	movs	r2, #0
 8000694:	602a      	str	r2, [r5, #0]
 8000696:	461a      	mov	r2, r3
 8000698:	f000 fe5d 	bl	8001356 <_lseek>
 800069c:	1c43      	adds	r3, r0, #1
 800069e:	d102      	bne.n	80006a6 <_lseek_r+0x1e>
 80006a0:	682b      	ldr	r3, [r5, #0]
 80006a2:	b103      	cbz	r3, 80006a6 <_lseek_r+0x1e>
 80006a4:	6023      	str	r3, [r4, #0]
 80006a6:	bd38      	pop	{r3, r4, r5, pc}
 80006a8:	200001b8 	.word	0x200001b8

080006ac <_read_r>:
 80006ac:	b538      	push	{r3, r4, r5, lr}
 80006ae:	4d07      	ldr	r5, [pc, #28]	@ (80006cc <_read_r+0x20>)
 80006b0:	4604      	mov	r4, r0
 80006b2:	4608      	mov	r0, r1
 80006b4:	4611      	mov	r1, r2
 80006b6:	2200      	movs	r2, #0
 80006b8:	602a      	str	r2, [r5, #0]
 80006ba:	461a      	mov	r2, r3
 80006bc:	f7ff fe0a 	bl	80002d4 <_read>
 80006c0:	1c43      	adds	r3, r0, #1
 80006c2:	d102      	bne.n	80006ca <_read_r+0x1e>
 80006c4:	682b      	ldr	r3, [r5, #0]
 80006c6:	b103      	cbz	r3, 80006ca <_read_r+0x1e>
 80006c8:	6023      	str	r3, [r4, #0]
 80006ca:	bd38      	pop	{r3, r4, r5, pc}
 80006cc:	200001b8 	.word	0x200001b8

080006d0 <_write_r>:
 80006d0:	b538      	push	{r3, r4, r5, lr}
 80006d2:	4d07      	ldr	r5, [pc, #28]	@ (80006f0 <_write_r+0x20>)
 80006d4:	4604      	mov	r4, r0
 80006d6:	4608      	mov	r0, r1
 80006d8:	4611      	mov	r1, r2
 80006da:	2200      	movs	r2, #0
 80006dc:	602a      	str	r2, [r5, #0]
 80006de:	461a      	mov	r2, r3
 80006e0:	f7ff fe15 	bl	800030e <_write>
 80006e4:	1c43      	adds	r3, r0, #1
 80006e6:	d102      	bne.n	80006ee <_write_r+0x1e>
 80006e8:	682b      	ldr	r3, [r5, #0]
 80006ea:	b103      	cbz	r3, 80006ee <_write_r+0x1e>
 80006ec:	6023      	str	r3, [r4, #0]
 80006ee:	bd38      	pop	{r3, r4, r5, pc}
 80006f0:	200001b8 	.word	0x200001b8

080006f4 <__errno>:
 80006f4:	4b01      	ldr	r3, [pc, #4]	@ (80006fc <__errno+0x8>)
 80006f6:	6818      	ldr	r0, [r3, #0]
 80006f8:	4770      	bx	lr
 80006fa:	bf00      	nop
 80006fc:	2000000c 	.word	0x2000000c

08000700 <__libc_init_array>:
 8000700:	b570      	push	{r4, r5, r6, lr}
 8000702:	4d0d      	ldr	r5, [pc, #52]	@ (8000738 <__libc_init_array+0x38>)
 8000704:	4c0d      	ldr	r4, [pc, #52]	@ (800073c <__libc_init_array+0x3c>)
 8000706:	1b64      	subs	r4, r4, r5
 8000708:	10a4      	asrs	r4, r4, #2
 800070a:	2600      	movs	r6, #0
 800070c:	42a6      	cmp	r6, r4
 800070e:	d109      	bne.n	8000724 <__libc_init_array+0x24>
 8000710:	4d0b      	ldr	r5, [pc, #44]	@ (8000740 <__libc_init_array+0x40>)
 8000712:	4c0c      	ldr	r4, [pc, #48]	@ (8000744 <__libc_init_array+0x44>)
 8000714:	f000 fe72 	bl	80013fc <_init>
 8000718:	1b64      	subs	r4, r4, r5
 800071a:	10a4      	asrs	r4, r4, #2
 800071c:	2600      	movs	r6, #0
 800071e:	42a6      	cmp	r6, r4
 8000720:	d105      	bne.n	800072e <__libc_init_array+0x2e>
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f855 3b04 	ldr.w	r3, [r5], #4
 8000728:	4798      	blx	r3
 800072a:	3601      	adds	r6, #1
 800072c:	e7ee      	b.n	800070c <__libc_init_array+0xc>
 800072e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000732:	4798      	blx	r3
 8000734:	3601      	adds	r6, #1
 8000736:	e7f2      	b.n	800071e <__libc_init_array+0x1e>
 8000738:	0800145c 	.word	0x0800145c
 800073c:	0800145c 	.word	0x0800145c
 8000740:	0800145c 	.word	0x0800145c
 8000744:	08001460 	.word	0x08001460

08000748 <__retarget_lock_init_recursive>:
 8000748:	4770      	bx	lr

0800074a <__retarget_lock_acquire_recursive>:
 800074a:	4770      	bx	lr

0800074c <__retarget_lock_release_recursive>:
 800074c:	4770      	bx	lr
	...

08000750 <_free_r>:
 8000750:	b538      	push	{r3, r4, r5, lr}
 8000752:	4605      	mov	r5, r0
 8000754:	2900      	cmp	r1, #0
 8000756:	d041      	beq.n	80007dc <_free_r+0x8c>
 8000758:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800075c:	1f0c      	subs	r4, r1, #4
 800075e:	2b00      	cmp	r3, #0
 8000760:	bfb8      	it	lt
 8000762:	18e4      	addlt	r4, r4, r3
 8000764:	f000 f8e0 	bl	8000928 <__malloc_lock>
 8000768:	4a1d      	ldr	r2, [pc, #116]	@ (80007e0 <_free_r+0x90>)
 800076a:	6813      	ldr	r3, [r2, #0]
 800076c:	b933      	cbnz	r3, 800077c <_free_r+0x2c>
 800076e:	6063      	str	r3, [r4, #4]
 8000770:	6014      	str	r4, [r2, #0]
 8000772:	4628      	mov	r0, r5
 8000774:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000778:	f000 b8dc 	b.w	8000934 <__malloc_unlock>
 800077c:	42a3      	cmp	r3, r4
 800077e:	d908      	bls.n	8000792 <_free_r+0x42>
 8000780:	6820      	ldr	r0, [r4, #0]
 8000782:	1821      	adds	r1, r4, r0
 8000784:	428b      	cmp	r3, r1
 8000786:	bf01      	itttt	eq
 8000788:	6819      	ldreq	r1, [r3, #0]
 800078a:	685b      	ldreq	r3, [r3, #4]
 800078c:	1809      	addeq	r1, r1, r0
 800078e:	6021      	streq	r1, [r4, #0]
 8000790:	e7ed      	b.n	800076e <_free_r+0x1e>
 8000792:	461a      	mov	r2, r3
 8000794:	685b      	ldr	r3, [r3, #4]
 8000796:	b10b      	cbz	r3, 800079c <_free_r+0x4c>
 8000798:	42a3      	cmp	r3, r4
 800079a:	d9fa      	bls.n	8000792 <_free_r+0x42>
 800079c:	6811      	ldr	r1, [r2, #0]
 800079e:	1850      	adds	r0, r2, r1
 80007a0:	42a0      	cmp	r0, r4
 80007a2:	d10b      	bne.n	80007bc <_free_r+0x6c>
 80007a4:	6820      	ldr	r0, [r4, #0]
 80007a6:	4401      	add	r1, r0
 80007a8:	1850      	adds	r0, r2, r1
 80007aa:	4283      	cmp	r3, r0
 80007ac:	6011      	str	r1, [r2, #0]
 80007ae:	d1e0      	bne.n	8000772 <_free_r+0x22>
 80007b0:	6818      	ldr	r0, [r3, #0]
 80007b2:	685b      	ldr	r3, [r3, #4]
 80007b4:	6053      	str	r3, [r2, #4]
 80007b6:	4408      	add	r0, r1
 80007b8:	6010      	str	r0, [r2, #0]
 80007ba:	e7da      	b.n	8000772 <_free_r+0x22>
 80007bc:	d902      	bls.n	80007c4 <_free_r+0x74>
 80007be:	230c      	movs	r3, #12
 80007c0:	602b      	str	r3, [r5, #0]
 80007c2:	e7d6      	b.n	8000772 <_free_r+0x22>
 80007c4:	6820      	ldr	r0, [r4, #0]
 80007c6:	1821      	adds	r1, r4, r0
 80007c8:	428b      	cmp	r3, r1
 80007ca:	bf04      	itt	eq
 80007cc:	6819      	ldreq	r1, [r3, #0]
 80007ce:	685b      	ldreq	r3, [r3, #4]
 80007d0:	6063      	str	r3, [r4, #4]
 80007d2:	bf04      	itt	eq
 80007d4:	1809      	addeq	r1, r1, r0
 80007d6:	6021      	streq	r1, [r4, #0]
 80007d8:	6054      	str	r4, [r2, #4]
 80007da:	e7ca      	b.n	8000772 <_free_r+0x22>
 80007dc:	bd38      	pop	{r3, r4, r5, pc}
 80007de:	bf00      	nop
 80007e0:	200001c4 	.word	0x200001c4

080007e4 <sbrk_aligned>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	4e0f      	ldr	r6, [pc, #60]	@ (8000824 <sbrk_aligned+0x40>)
 80007e8:	460c      	mov	r4, r1
 80007ea:	6831      	ldr	r1, [r6, #0]
 80007ec:	4605      	mov	r5, r0
 80007ee:	b911      	cbnz	r1, 80007f6 <sbrk_aligned+0x12>
 80007f0:	f000 fcb4 	bl	800115c <_sbrk_r>
 80007f4:	6030      	str	r0, [r6, #0]
 80007f6:	4621      	mov	r1, r4
 80007f8:	4628      	mov	r0, r5
 80007fa:	f000 fcaf 	bl	800115c <_sbrk_r>
 80007fe:	1c43      	adds	r3, r0, #1
 8000800:	d103      	bne.n	800080a <sbrk_aligned+0x26>
 8000802:	f04f 34ff 	mov.w	r4, #4294967295
 8000806:	4620      	mov	r0, r4
 8000808:	bd70      	pop	{r4, r5, r6, pc}
 800080a:	1cc4      	adds	r4, r0, #3
 800080c:	f024 0403 	bic.w	r4, r4, #3
 8000810:	42a0      	cmp	r0, r4
 8000812:	d0f8      	beq.n	8000806 <sbrk_aligned+0x22>
 8000814:	1a21      	subs	r1, r4, r0
 8000816:	4628      	mov	r0, r5
 8000818:	f000 fca0 	bl	800115c <_sbrk_r>
 800081c:	3001      	adds	r0, #1
 800081e:	d1f2      	bne.n	8000806 <sbrk_aligned+0x22>
 8000820:	e7ef      	b.n	8000802 <sbrk_aligned+0x1e>
 8000822:	bf00      	nop
 8000824:	200001c0 	.word	0x200001c0

08000828 <_malloc_r>:
 8000828:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800082c:	1ccd      	adds	r5, r1, #3
 800082e:	f025 0503 	bic.w	r5, r5, #3
 8000832:	3508      	adds	r5, #8
 8000834:	2d0c      	cmp	r5, #12
 8000836:	bf38      	it	cc
 8000838:	250c      	movcc	r5, #12
 800083a:	2d00      	cmp	r5, #0
 800083c:	4606      	mov	r6, r0
 800083e:	db01      	blt.n	8000844 <_malloc_r+0x1c>
 8000840:	42a9      	cmp	r1, r5
 8000842:	d904      	bls.n	800084e <_malloc_r+0x26>
 8000844:	230c      	movs	r3, #12
 8000846:	6033      	str	r3, [r6, #0]
 8000848:	2000      	movs	r0, #0
 800084a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800084e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000924 <_malloc_r+0xfc>
 8000852:	f000 f869 	bl	8000928 <__malloc_lock>
 8000856:	f8d8 3000 	ldr.w	r3, [r8]
 800085a:	461c      	mov	r4, r3
 800085c:	bb44      	cbnz	r4, 80008b0 <_malloc_r+0x88>
 800085e:	4629      	mov	r1, r5
 8000860:	4630      	mov	r0, r6
 8000862:	f7ff ffbf 	bl	80007e4 <sbrk_aligned>
 8000866:	1c43      	adds	r3, r0, #1
 8000868:	4604      	mov	r4, r0
 800086a:	d158      	bne.n	800091e <_malloc_r+0xf6>
 800086c:	f8d8 4000 	ldr.w	r4, [r8]
 8000870:	4627      	mov	r7, r4
 8000872:	2f00      	cmp	r7, #0
 8000874:	d143      	bne.n	80008fe <_malloc_r+0xd6>
 8000876:	2c00      	cmp	r4, #0
 8000878:	d04b      	beq.n	8000912 <_malloc_r+0xea>
 800087a:	6823      	ldr	r3, [r4, #0]
 800087c:	4639      	mov	r1, r7
 800087e:	4630      	mov	r0, r6
 8000880:	eb04 0903 	add.w	r9, r4, r3
 8000884:	f000 fc6a 	bl	800115c <_sbrk_r>
 8000888:	4581      	cmp	r9, r0
 800088a:	d142      	bne.n	8000912 <_malloc_r+0xea>
 800088c:	6821      	ldr	r1, [r4, #0]
 800088e:	1a6d      	subs	r5, r5, r1
 8000890:	4629      	mov	r1, r5
 8000892:	4630      	mov	r0, r6
 8000894:	f7ff ffa6 	bl	80007e4 <sbrk_aligned>
 8000898:	3001      	adds	r0, #1
 800089a:	d03a      	beq.n	8000912 <_malloc_r+0xea>
 800089c:	6823      	ldr	r3, [r4, #0]
 800089e:	442b      	add	r3, r5
 80008a0:	6023      	str	r3, [r4, #0]
 80008a2:	f8d8 3000 	ldr.w	r3, [r8]
 80008a6:	685a      	ldr	r2, [r3, #4]
 80008a8:	bb62      	cbnz	r2, 8000904 <_malloc_r+0xdc>
 80008aa:	f8c8 7000 	str.w	r7, [r8]
 80008ae:	e00f      	b.n	80008d0 <_malloc_r+0xa8>
 80008b0:	6822      	ldr	r2, [r4, #0]
 80008b2:	1b52      	subs	r2, r2, r5
 80008b4:	d420      	bmi.n	80008f8 <_malloc_r+0xd0>
 80008b6:	2a0b      	cmp	r2, #11
 80008b8:	d917      	bls.n	80008ea <_malloc_r+0xc2>
 80008ba:	1961      	adds	r1, r4, r5
 80008bc:	42a3      	cmp	r3, r4
 80008be:	6025      	str	r5, [r4, #0]
 80008c0:	bf18      	it	ne
 80008c2:	6059      	strne	r1, [r3, #4]
 80008c4:	6863      	ldr	r3, [r4, #4]
 80008c6:	bf08      	it	eq
 80008c8:	f8c8 1000 	streq.w	r1, [r8]
 80008cc:	5162      	str	r2, [r4, r5]
 80008ce:	604b      	str	r3, [r1, #4]
 80008d0:	4630      	mov	r0, r6
 80008d2:	f000 f82f 	bl	8000934 <__malloc_unlock>
 80008d6:	f104 000b 	add.w	r0, r4, #11
 80008da:	1d23      	adds	r3, r4, #4
 80008dc:	f020 0007 	bic.w	r0, r0, #7
 80008e0:	1ac2      	subs	r2, r0, r3
 80008e2:	bf1c      	itt	ne
 80008e4:	1a1b      	subne	r3, r3, r0
 80008e6:	50a3      	strne	r3, [r4, r2]
 80008e8:	e7af      	b.n	800084a <_malloc_r+0x22>
 80008ea:	6862      	ldr	r2, [r4, #4]
 80008ec:	42a3      	cmp	r3, r4
 80008ee:	bf0c      	ite	eq
 80008f0:	f8c8 2000 	streq.w	r2, [r8]
 80008f4:	605a      	strne	r2, [r3, #4]
 80008f6:	e7eb      	b.n	80008d0 <_malloc_r+0xa8>
 80008f8:	4623      	mov	r3, r4
 80008fa:	6864      	ldr	r4, [r4, #4]
 80008fc:	e7ae      	b.n	800085c <_malloc_r+0x34>
 80008fe:	463c      	mov	r4, r7
 8000900:	687f      	ldr	r7, [r7, #4]
 8000902:	e7b6      	b.n	8000872 <_malloc_r+0x4a>
 8000904:	461a      	mov	r2, r3
 8000906:	685b      	ldr	r3, [r3, #4]
 8000908:	42a3      	cmp	r3, r4
 800090a:	d1fb      	bne.n	8000904 <_malloc_r+0xdc>
 800090c:	2300      	movs	r3, #0
 800090e:	6053      	str	r3, [r2, #4]
 8000910:	e7de      	b.n	80008d0 <_malloc_r+0xa8>
 8000912:	230c      	movs	r3, #12
 8000914:	6033      	str	r3, [r6, #0]
 8000916:	4630      	mov	r0, r6
 8000918:	f000 f80c 	bl	8000934 <__malloc_unlock>
 800091c:	e794      	b.n	8000848 <_malloc_r+0x20>
 800091e:	6005      	str	r5, [r0, #0]
 8000920:	e7d6      	b.n	80008d0 <_malloc_r+0xa8>
 8000922:	bf00      	nop
 8000924:	200001c4 	.word	0x200001c4

08000928 <__malloc_lock>:
 8000928:	4801      	ldr	r0, [pc, #4]	@ (8000930 <__malloc_lock+0x8>)
 800092a:	f7ff bf0e 	b.w	800074a <__retarget_lock_acquire_recursive>
 800092e:	bf00      	nop
 8000930:	200001bc 	.word	0x200001bc

08000934 <__malloc_unlock>:
 8000934:	4801      	ldr	r0, [pc, #4]	@ (800093c <__malloc_unlock+0x8>)
 8000936:	f7ff bf09 	b.w	800074c <__retarget_lock_release_recursive>
 800093a:	bf00      	nop
 800093c:	200001bc 	.word	0x200001bc

08000940 <__sfputc_r>:
 8000940:	6893      	ldr	r3, [r2, #8]
 8000942:	3b01      	subs	r3, #1
 8000944:	2b00      	cmp	r3, #0
 8000946:	b410      	push	{r4}
 8000948:	6093      	str	r3, [r2, #8]
 800094a:	da08      	bge.n	800095e <__sfputc_r+0x1e>
 800094c:	6994      	ldr	r4, [r2, #24]
 800094e:	42a3      	cmp	r3, r4
 8000950:	db01      	blt.n	8000956 <__sfputc_r+0x16>
 8000952:	290a      	cmp	r1, #10
 8000954:	d103      	bne.n	800095e <__sfputc_r+0x1e>
 8000956:	f85d 4b04 	ldr.w	r4, [sp], #4
 800095a:	f000 bb6b 	b.w	8001034 <__swbuf_r>
 800095e:	6813      	ldr	r3, [r2, #0]
 8000960:	1c58      	adds	r0, r3, #1
 8000962:	6010      	str	r0, [r2, #0]
 8000964:	7019      	strb	r1, [r3, #0]
 8000966:	4608      	mov	r0, r1
 8000968:	f85d 4b04 	ldr.w	r4, [sp], #4
 800096c:	4770      	bx	lr

0800096e <__sfputs_r>:
 800096e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000970:	4606      	mov	r6, r0
 8000972:	460f      	mov	r7, r1
 8000974:	4614      	mov	r4, r2
 8000976:	18d5      	adds	r5, r2, r3
 8000978:	42ac      	cmp	r4, r5
 800097a:	d101      	bne.n	8000980 <__sfputs_r+0x12>
 800097c:	2000      	movs	r0, #0
 800097e:	e007      	b.n	8000990 <__sfputs_r+0x22>
 8000980:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000984:	463a      	mov	r2, r7
 8000986:	4630      	mov	r0, r6
 8000988:	f7ff ffda 	bl	8000940 <__sfputc_r>
 800098c:	1c43      	adds	r3, r0, #1
 800098e:	d1f3      	bne.n	8000978 <__sfputs_r+0xa>
 8000990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000994 <_vfiprintf_r>:
 8000994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000998:	460d      	mov	r5, r1
 800099a:	b09d      	sub	sp, #116	@ 0x74
 800099c:	4614      	mov	r4, r2
 800099e:	4698      	mov	r8, r3
 80009a0:	4606      	mov	r6, r0
 80009a2:	b118      	cbz	r0, 80009ac <_vfiprintf_r+0x18>
 80009a4:	6a03      	ldr	r3, [r0, #32]
 80009a6:	b90b      	cbnz	r3, 80009ac <_vfiprintf_r+0x18>
 80009a8:	f7ff fdca 	bl	8000540 <__sinit>
 80009ac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009ae:	07d9      	lsls	r1, r3, #31
 80009b0:	d405      	bmi.n	80009be <_vfiprintf_r+0x2a>
 80009b2:	89ab      	ldrh	r3, [r5, #12]
 80009b4:	059a      	lsls	r2, r3, #22
 80009b6:	d402      	bmi.n	80009be <_vfiprintf_r+0x2a>
 80009b8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009ba:	f7ff fec6 	bl	800074a <__retarget_lock_acquire_recursive>
 80009be:	89ab      	ldrh	r3, [r5, #12]
 80009c0:	071b      	lsls	r3, r3, #28
 80009c2:	d501      	bpl.n	80009c8 <_vfiprintf_r+0x34>
 80009c4:	692b      	ldr	r3, [r5, #16]
 80009c6:	b99b      	cbnz	r3, 80009f0 <_vfiprintf_r+0x5c>
 80009c8:	4629      	mov	r1, r5
 80009ca:	4630      	mov	r0, r6
 80009cc:	f000 fb70 	bl	80010b0 <__swsetup_r>
 80009d0:	b170      	cbz	r0, 80009f0 <_vfiprintf_r+0x5c>
 80009d2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009d4:	07dc      	lsls	r4, r3, #31
 80009d6:	d504      	bpl.n	80009e2 <_vfiprintf_r+0x4e>
 80009d8:	f04f 30ff 	mov.w	r0, #4294967295
 80009dc:	b01d      	add	sp, #116	@ 0x74
 80009de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009e2:	89ab      	ldrh	r3, [r5, #12]
 80009e4:	0598      	lsls	r0, r3, #22
 80009e6:	d4f7      	bmi.n	80009d8 <_vfiprintf_r+0x44>
 80009e8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009ea:	f7ff feaf 	bl	800074c <__retarget_lock_release_recursive>
 80009ee:	e7f3      	b.n	80009d8 <_vfiprintf_r+0x44>
 80009f0:	2300      	movs	r3, #0
 80009f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80009f4:	2320      	movs	r3, #32
 80009f6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80009fa:	f8cd 800c 	str.w	r8, [sp, #12]
 80009fe:	2330      	movs	r3, #48	@ 0x30
 8000a00:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000bb0 <_vfiprintf_r+0x21c>
 8000a04:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a08:	f04f 0901 	mov.w	r9, #1
 8000a0c:	4623      	mov	r3, r4
 8000a0e:	469a      	mov	sl, r3
 8000a10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a14:	b10a      	cbz	r2, 8000a1a <_vfiprintf_r+0x86>
 8000a16:	2a25      	cmp	r2, #37	@ 0x25
 8000a18:	d1f9      	bne.n	8000a0e <_vfiprintf_r+0x7a>
 8000a1a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a1e:	d00b      	beq.n	8000a38 <_vfiprintf_r+0xa4>
 8000a20:	465b      	mov	r3, fp
 8000a22:	4622      	mov	r2, r4
 8000a24:	4629      	mov	r1, r5
 8000a26:	4630      	mov	r0, r6
 8000a28:	f7ff ffa1 	bl	800096e <__sfputs_r>
 8000a2c:	3001      	adds	r0, #1
 8000a2e:	f000 80a7 	beq.w	8000b80 <_vfiprintf_r+0x1ec>
 8000a32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000a34:	445a      	add	r2, fp
 8000a36:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a38:	f89a 3000 	ldrb.w	r3, [sl]
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	f000 809f 	beq.w	8000b80 <_vfiprintf_r+0x1ec>
 8000a42:	2300      	movs	r3, #0
 8000a44:	f04f 32ff 	mov.w	r2, #4294967295
 8000a48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a4c:	f10a 0a01 	add.w	sl, sl, #1
 8000a50:	9304      	str	r3, [sp, #16]
 8000a52:	9307      	str	r3, [sp, #28]
 8000a54:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000a58:	931a      	str	r3, [sp, #104]	@ 0x68
 8000a5a:	4654      	mov	r4, sl
 8000a5c:	2205      	movs	r2, #5
 8000a5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a62:	4853      	ldr	r0, [pc, #332]	@ (8000bb0 <_vfiprintf_r+0x21c>)
 8000a64:	f7ff fbb4 	bl	80001d0 <memchr>
 8000a68:	9a04      	ldr	r2, [sp, #16]
 8000a6a:	b9d8      	cbnz	r0, 8000aa4 <_vfiprintf_r+0x110>
 8000a6c:	06d1      	lsls	r1, r2, #27
 8000a6e:	bf44      	itt	mi
 8000a70:	2320      	movmi	r3, #32
 8000a72:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a76:	0713      	lsls	r3, r2, #28
 8000a78:	bf44      	itt	mi
 8000a7a:	232b      	movmi	r3, #43	@ 0x2b
 8000a7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a80:	f89a 3000 	ldrb.w	r3, [sl]
 8000a84:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a86:	d015      	beq.n	8000ab4 <_vfiprintf_r+0x120>
 8000a88:	9a07      	ldr	r2, [sp, #28]
 8000a8a:	4654      	mov	r4, sl
 8000a8c:	2000      	movs	r0, #0
 8000a8e:	f04f 0c0a 	mov.w	ip, #10
 8000a92:	4621      	mov	r1, r4
 8000a94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a98:	3b30      	subs	r3, #48	@ 0x30
 8000a9a:	2b09      	cmp	r3, #9
 8000a9c:	d94b      	bls.n	8000b36 <_vfiprintf_r+0x1a2>
 8000a9e:	b1b0      	cbz	r0, 8000ace <_vfiprintf_r+0x13a>
 8000aa0:	9207      	str	r2, [sp, #28]
 8000aa2:	e014      	b.n	8000ace <_vfiprintf_r+0x13a>
 8000aa4:	eba0 0308 	sub.w	r3, r0, r8
 8000aa8:	fa09 f303 	lsl.w	r3, r9, r3
 8000aac:	4313      	orrs	r3, r2
 8000aae:	9304      	str	r3, [sp, #16]
 8000ab0:	46a2      	mov	sl, r4
 8000ab2:	e7d2      	b.n	8000a5a <_vfiprintf_r+0xc6>
 8000ab4:	9b03      	ldr	r3, [sp, #12]
 8000ab6:	1d19      	adds	r1, r3, #4
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	9103      	str	r1, [sp, #12]
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	bfbb      	ittet	lt
 8000ac0:	425b      	neglt	r3, r3
 8000ac2:	f042 0202 	orrlt.w	r2, r2, #2
 8000ac6:	9307      	strge	r3, [sp, #28]
 8000ac8:	9307      	strlt	r3, [sp, #28]
 8000aca:	bfb8      	it	lt
 8000acc:	9204      	strlt	r2, [sp, #16]
 8000ace:	7823      	ldrb	r3, [r4, #0]
 8000ad0:	2b2e      	cmp	r3, #46	@ 0x2e
 8000ad2:	d10a      	bne.n	8000aea <_vfiprintf_r+0x156>
 8000ad4:	7863      	ldrb	r3, [r4, #1]
 8000ad6:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ad8:	d132      	bne.n	8000b40 <_vfiprintf_r+0x1ac>
 8000ada:	9b03      	ldr	r3, [sp, #12]
 8000adc:	1d1a      	adds	r2, r3, #4
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	9203      	str	r2, [sp, #12]
 8000ae2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000ae6:	3402      	adds	r4, #2
 8000ae8:	9305      	str	r3, [sp, #20]
 8000aea:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000bc0 <_vfiprintf_r+0x22c>
 8000aee:	7821      	ldrb	r1, [r4, #0]
 8000af0:	2203      	movs	r2, #3
 8000af2:	4650      	mov	r0, sl
 8000af4:	f7ff fb6c 	bl	80001d0 <memchr>
 8000af8:	b138      	cbz	r0, 8000b0a <_vfiprintf_r+0x176>
 8000afa:	9b04      	ldr	r3, [sp, #16]
 8000afc:	eba0 000a 	sub.w	r0, r0, sl
 8000b00:	2240      	movs	r2, #64	@ 0x40
 8000b02:	4082      	lsls	r2, r0
 8000b04:	4313      	orrs	r3, r2
 8000b06:	3401      	adds	r4, #1
 8000b08:	9304      	str	r3, [sp, #16]
 8000b0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b0e:	4829      	ldr	r0, [pc, #164]	@ (8000bb4 <_vfiprintf_r+0x220>)
 8000b10:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b14:	2206      	movs	r2, #6
 8000b16:	f7ff fb5b 	bl	80001d0 <memchr>
 8000b1a:	2800      	cmp	r0, #0
 8000b1c:	d03f      	beq.n	8000b9e <_vfiprintf_r+0x20a>
 8000b1e:	4b26      	ldr	r3, [pc, #152]	@ (8000bb8 <_vfiprintf_r+0x224>)
 8000b20:	bb1b      	cbnz	r3, 8000b6a <_vfiprintf_r+0x1d6>
 8000b22:	9b03      	ldr	r3, [sp, #12]
 8000b24:	3307      	adds	r3, #7
 8000b26:	f023 0307 	bic.w	r3, r3, #7
 8000b2a:	3308      	adds	r3, #8
 8000b2c:	9303      	str	r3, [sp, #12]
 8000b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000b30:	443b      	add	r3, r7
 8000b32:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b34:	e76a      	b.n	8000a0c <_vfiprintf_r+0x78>
 8000b36:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b3a:	460c      	mov	r4, r1
 8000b3c:	2001      	movs	r0, #1
 8000b3e:	e7a8      	b.n	8000a92 <_vfiprintf_r+0xfe>
 8000b40:	2300      	movs	r3, #0
 8000b42:	3401      	adds	r4, #1
 8000b44:	9305      	str	r3, [sp, #20]
 8000b46:	4619      	mov	r1, r3
 8000b48:	f04f 0c0a 	mov.w	ip, #10
 8000b4c:	4620      	mov	r0, r4
 8000b4e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b52:	3a30      	subs	r2, #48	@ 0x30
 8000b54:	2a09      	cmp	r2, #9
 8000b56:	d903      	bls.n	8000b60 <_vfiprintf_r+0x1cc>
 8000b58:	2b00      	cmp	r3, #0
 8000b5a:	d0c6      	beq.n	8000aea <_vfiprintf_r+0x156>
 8000b5c:	9105      	str	r1, [sp, #20]
 8000b5e:	e7c4      	b.n	8000aea <_vfiprintf_r+0x156>
 8000b60:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b64:	4604      	mov	r4, r0
 8000b66:	2301      	movs	r3, #1
 8000b68:	e7f0      	b.n	8000b4c <_vfiprintf_r+0x1b8>
 8000b6a:	ab03      	add	r3, sp, #12
 8000b6c:	9300      	str	r3, [sp, #0]
 8000b6e:	462a      	mov	r2, r5
 8000b70:	4b12      	ldr	r3, [pc, #72]	@ (8000bbc <_vfiprintf_r+0x228>)
 8000b72:	a904      	add	r1, sp, #16
 8000b74:	4630      	mov	r0, r6
 8000b76:	f3af 8000 	nop.w
 8000b7a:	4607      	mov	r7, r0
 8000b7c:	1c78      	adds	r0, r7, #1
 8000b7e:	d1d6      	bne.n	8000b2e <_vfiprintf_r+0x19a>
 8000b80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b82:	07d9      	lsls	r1, r3, #31
 8000b84:	d405      	bmi.n	8000b92 <_vfiprintf_r+0x1fe>
 8000b86:	89ab      	ldrh	r3, [r5, #12]
 8000b88:	059a      	lsls	r2, r3, #22
 8000b8a:	d402      	bmi.n	8000b92 <_vfiprintf_r+0x1fe>
 8000b8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b8e:	f7ff fddd 	bl	800074c <__retarget_lock_release_recursive>
 8000b92:	89ab      	ldrh	r3, [r5, #12]
 8000b94:	065b      	lsls	r3, r3, #25
 8000b96:	f53f af1f 	bmi.w	80009d8 <_vfiprintf_r+0x44>
 8000b9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b9c:	e71e      	b.n	80009dc <_vfiprintf_r+0x48>
 8000b9e:	ab03      	add	r3, sp, #12
 8000ba0:	9300      	str	r3, [sp, #0]
 8000ba2:	462a      	mov	r2, r5
 8000ba4:	4b05      	ldr	r3, [pc, #20]	@ (8000bbc <_vfiprintf_r+0x228>)
 8000ba6:	a904      	add	r1, sp, #16
 8000ba8:	4630      	mov	r0, r6
 8000baa:	f000 f879 	bl	8000ca0 <_printf_i>
 8000bae:	e7e4      	b.n	8000b7a <_vfiprintf_r+0x1e6>
 8000bb0:	08001421 	.word	0x08001421
 8000bb4:	0800142b 	.word	0x0800142b
 8000bb8:	00000000 	.word	0x00000000
 8000bbc:	0800096f 	.word	0x0800096f
 8000bc0:	08001427 	.word	0x08001427

08000bc4 <_printf_common>:
 8000bc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc8:	4616      	mov	r6, r2
 8000bca:	4698      	mov	r8, r3
 8000bcc:	688a      	ldr	r2, [r1, #8]
 8000bce:	690b      	ldr	r3, [r1, #16]
 8000bd0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000bd4:	4293      	cmp	r3, r2
 8000bd6:	bfb8      	it	lt
 8000bd8:	4613      	movlt	r3, r2
 8000bda:	6033      	str	r3, [r6, #0]
 8000bdc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000be0:	4607      	mov	r7, r0
 8000be2:	460c      	mov	r4, r1
 8000be4:	b10a      	cbz	r2, 8000bea <_printf_common+0x26>
 8000be6:	3301      	adds	r3, #1
 8000be8:	6033      	str	r3, [r6, #0]
 8000bea:	6823      	ldr	r3, [r4, #0]
 8000bec:	0699      	lsls	r1, r3, #26
 8000bee:	bf42      	ittt	mi
 8000bf0:	6833      	ldrmi	r3, [r6, #0]
 8000bf2:	3302      	addmi	r3, #2
 8000bf4:	6033      	strmi	r3, [r6, #0]
 8000bf6:	6825      	ldr	r5, [r4, #0]
 8000bf8:	f015 0506 	ands.w	r5, r5, #6
 8000bfc:	d106      	bne.n	8000c0c <_printf_common+0x48>
 8000bfe:	f104 0a19 	add.w	sl, r4, #25
 8000c02:	68e3      	ldr	r3, [r4, #12]
 8000c04:	6832      	ldr	r2, [r6, #0]
 8000c06:	1a9b      	subs	r3, r3, r2
 8000c08:	42ab      	cmp	r3, r5
 8000c0a:	dc26      	bgt.n	8000c5a <_printf_common+0x96>
 8000c0c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c10:	6822      	ldr	r2, [r4, #0]
 8000c12:	3b00      	subs	r3, #0
 8000c14:	bf18      	it	ne
 8000c16:	2301      	movne	r3, #1
 8000c18:	0692      	lsls	r2, r2, #26
 8000c1a:	d42b      	bmi.n	8000c74 <_printf_common+0xb0>
 8000c1c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c20:	4641      	mov	r1, r8
 8000c22:	4638      	mov	r0, r7
 8000c24:	47c8      	blx	r9
 8000c26:	3001      	adds	r0, #1
 8000c28:	d01e      	beq.n	8000c68 <_printf_common+0xa4>
 8000c2a:	6823      	ldr	r3, [r4, #0]
 8000c2c:	6922      	ldr	r2, [r4, #16]
 8000c2e:	f003 0306 	and.w	r3, r3, #6
 8000c32:	2b04      	cmp	r3, #4
 8000c34:	bf02      	ittt	eq
 8000c36:	68e5      	ldreq	r5, [r4, #12]
 8000c38:	6833      	ldreq	r3, [r6, #0]
 8000c3a:	1aed      	subeq	r5, r5, r3
 8000c3c:	68a3      	ldr	r3, [r4, #8]
 8000c3e:	bf0c      	ite	eq
 8000c40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c44:	2500      	movne	r5, #0
 8000c46:	4293      	cmp	r3, r2
 8000c48:	bfc4      	itt	gt
 8000c4a:	1a9b      	subgt	r3, r3, r2
 8000c4c:	18ed      	addgt	r5, r5, r3
 8000c4e:	2600      	movs	r6, #0
 8000c50:	341a      	adds	r4, #26
 8000c52:	42b5      	cmp	r5, r6
 8000c54:	d11a      	bne.n	8000c8c <_printf_common+0xc8>
 8000c56:	2000      	movs	r0, #0
 8000c58:	e008      	b.n	8000c6c <_printf_common+0xa8>
 8000c5a:	2301      	movs	r3, #1
 8000c5c:	4652      	mov	r2, sl
 8000c5e:	4641      	mov	r1, r8
 8000c60:	4638      	mov	r0, r7
 8000c62:	47c8      	blx	r9
 8000c64:	3001      	adds	r0, #1
 8000c66:	d103      	bne.n	8000c70 <_printf_common+0xac>
 8000c68:	f04f 30ff 	mov.w	r0, #4294967295
 8000c6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c70:	3501      	adds	r5, #1
 8000c72:	e7c6      	b.n	8000c02 <_printf_common+0x3e>
 8000c74:	18e1      	adds	r1, r4, r3
 8000c76:	1c5a      	adds	r2, r3, #1
 8000c78:	2030      	movs	r0, #48	@ 0x30
 8000c7a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c7e:	4422      	add	r2, r4
 8000c80:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c84:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c88:	3302      	adds	r3, #2
 8000c8a:	e7c7      	b.n	8000c1c <_printf_common+0x58>
 8000c8c:	2301      	movs	r3, #1
 8000c8e:	4622      	mov	r2, r4
 8000c90:	4641      	mov	r1, r8
 8000c92:	4638      	mov	r0, r7
 8000c94:	47c8      	blx	r9
 8000c96:	3001      	adds	r0, #1
 8000c98:	d0e6      	beq.n	8000c68 <_printf_common+0xa4>
 8000c9a:	3601      	adds	r6, #1
 8000c9c:	e7d9      	b.n	8000c52 <_printf_common+0x8e>
	...

08000ca0 <_printf_i>:
 8000ca0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca4:	7e0f      	ldrb	r7, [r1, #24]
 8000ca6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000ca8:	2f78      	cmp	r7, #120	@ 0x78
 8000caa:	4691      	mov	r9, r2
 8000cac:	4680      	mov	r8, r0
 8000cae:	460c      	mov	r4, r1
 8000cb0:	469a      	mov	sl, r3
 8000cb2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000cb6:	d807      	bhi.n	8000cc8 <_printf_i+0x28>
 8000cb8:	2f62      	cmp	r7, #98	@ 0x62
 8000cba:	d80a      	bhi.n	8000cd2 <_printf_i+0x32>
 8000cbc:	2f00      	cmp	r7, #0
 8000cbe:	f000 80d1 	beq.w	8000e64 <_printf_i+0x1c4>
 8000cc2:	2f58      	cmp	r7, #88	@ 0x58
 8000cc4:	f000 80b8 	beq.w	8000e38 <_printf_i+0x198>
 8000cc8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ccc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000cd0:	e03a      	b.n	8000d48 <_printf_i+0xa8>
 8000cd2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000cd6:	2b15      	cmp	r3, #21
 8000cd8:	d8f6      	bhi.n	8000cc8 <_printf_i+0x28>
 8000cda:	a101      	add	r1, pc, #4	@ (adr r1, 8000ce0 <_printf_i+0x40>)
 8000cdc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ce0:	08000d39 	.word	0x08000d39
 8000ce4:	08000d4d 	.word	0x08000d4d
 8000ce8:	08000cc9 	.word	0x08000cc9
 8000cec:	08000cc9 	.word	0x08000cc9
 8000cf0:	08000cc9 	.word	0x08000cc9
 8000cf4:	08000cc9 	.word	0x08000cc9
 8000cf8:	08000d4d 	.word	0x08000d4d
 8000cfc:	08000cc9 	.word	0x08000cc9
 8000d00:	08000cc9 	.word	0x08000cc9
 8000d04:	08000cc9 	.word	0x08000cc9
 8000d08:	08000cc9 	.word	0x08000cc9
 8000d0c:	08000e4b 	.word	0x08000e4b
 8000d10:	08000d77 	.word	0x08000d77
 8000d14:	08000e05 	.word	0x08000e05
 8000d18:	08000cc9 	.word	0x08000cc9
 8000d1c:	08000cc9 	.word	0x08000cc9
 8000d20:	08000e6d 	.word	0x08000e6d
 8000d24:	08000cc9 	.word	0x08000cc9
 8000d28:	08000d77 	.word	0x08000d77
 8000d2c:	08000cc9 	.word	0x08000cc9
 8000d30:	08000cc9 	.word	0x08000cc9
 8000d34:	08000e0d 	.word	0x08000e0d
 8000d38:	6833      	ldr	r3, [r6, #0]
 8000d3a:	1d1a      	adds	r2, r3, #4
 8000d3c:	681b      	ldr	r3, [r3, #0]
 8000d3e:	6032      	str	r2, [r6, #0]
 8000d40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d44:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000d48:	2301      	movs	r3, #1
 8000d4a:	e09c      	b.n	8000e86 <_printf_i+0x1e6>
 8000d4c:	6833      	ldr	r3, [r6, #0]
 8000d4e:	6820      	ldr	r0, [r4, #0]
 8000d50:	1d19      	adds	r1, r3, #4
 8000d52:	6031      	str	r1, [r6, #0]
 8000d54:	0606      	lsls	r6, r0, #24
 8000d56:	d501      	bpl.n	8000d5c <_printf_i+0xbc>
 8000d58:	681d      	ldr	r5, [r3, #0]
 8000d5a:	e003      	b.n	8000d64 <_printf_i+0xc4>
 8000d5c:	0645      	lsls	r5, r0, #25
 8000d5e:	d5fb      	bpl.n	8000d58 <_printf_i+0xb8>
 8000d60:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d64:	2d00      	cmp	r5, #0
 8000d66:	da03      	bge.n	8000d70 <_printf_i+0xd0>
 8000d68:	232d      	movs	r3, #45	@ 0x2d
 8000d6a:	426d      	negs	r5, r5
 8000d6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d70:	4858      	ldr	r0, [pc, #352]	@ (8000ed4 <_printf_i+0x234>)
 8000d72:	230a      	movs	r3, #10
 8000d74:	e011      	b.n	8000d9a <_printf_i+0xfa>
 8000d76:	6821      	ldr	r1, [r4, #0]
 8000d78:	6833      	ldr	r3, [r6, #0]
 8000d7a:	0608      	lsls	r0, r1, #24
 8000d7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d80:	d402      	bmi.n	8000d88 <_printf_i+0xe8>
 8000d82:	0649      	lsls	r1, r1, #25
 8000d84:	bf48      	it	mi
 8000d86:	b2ad      	uxthmi	r5, r5
 8000d88:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d8a:	4852      	ldr	r0, [pc, #328]	@ (8000ed4 <_printf_i+0x234>)
 8000d8c:	6033      	str	r3, [r6, #0]
 8000d8e:	bf14      	ite	ne
 8000d90:	230a      	movne	r3, #10
 8000d92:	2308      	moveq	r3, #8
 8000d94:	2100      	movs	r1, #0
 8000d96:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d9a:	6866      	ldr	r6, [r4, #4]
 8000d9c:	60a6      	str	r6, [r4, #8]
 8000d9e:	2e00      	cmp	r6, #0
 8000da0:	db05      	blt.n	8000dae <_printf_i+0x10e>
 8000da2:	6821      	ldr	r1, [r4, #0]
 8000da4:	432e      	orrs	r6, r5
 8000da6:	f021 0104 	bic.w	r1, r1, #4
 8000daa:	6021      	str	r1, [r4, #0]
 8000dac:	d04b      	beq.n	8000e46 <_printf_i+0x1a6>
 8000dae:	4616      	mov	r6, r2
 8000db0:	fbb5 f1f3 	udiv	r1, r5, r3
 8000db4:	fb03 5711 	mls	r7, r3, r1, r5
 8000db8:	5dc7      	ldrb	r7, [r0, r7]
 8000dba:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000dbe:	462f      	mov	r7, r5
 8000dc0:	42bb      	cmp	r3, r7
 8000dc2:	460d      	mov	r5, r1
 8000dc4:	d9f4      	bls.n	8000db0 <_printf_i+0x110>
 8000dc6:	2b08      	cmp	r3, #8
 8000dc8:	d10b      	bne.n	8000de2 <_printf_i+0x142>
 8000dca:	6823      	ldr	r3, [r4, #0]
 8000dcc:	07df      	lsls	r7, r3, #31
 8000dce:	d508      	bpl.n	8000de2 <_printf_i+0x142>
 8000dd0:	6923      	ldr	r3, [r4, #16]
 8000dd2:	6861      	ldr	r1, [r4, #4]
 8000dd4:	4299      	cmp	r1, r3
 8000dd6:	bfde      	ittt	le
 8000dd8:	2330      	movle	r3, #48	@ 0x30
 8000dda:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000dde:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000de2:	1b92      	subs	r2, r2, r6
 8000de4:	6122      	str	r2, [r4, #16]
 8000de6:	f8cd a000 	str.w	sl, [sp]
 8000dea:	464b      	mov	r3, r9
 8000dec:	aa03      	add	r2, sp, #12
 8000dee:	4621      	mov	r1, r4
 8000df0:	4640      	mov	r0, r8
 8000df2:	f7ff fee7 	bl	8000bc4 <_printf_common>
 8000df6:	3001      	adds	r0, #1
 8000df8:	d14a      	bne.n	8000e90 <_printf_i+0x1f0>
 8000dfa:	f04f 30ff 	mov.w	r0, #4294967295
 8000dfe:	b004      	add	sp, #16
 8000e00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e04:	6823      	ldr	r3, [r4, #0]
 8000e06:	f043 0320 	orr.w	r3, r3, #32
 8000e0a:	6023      	str	r3, [r4, #0]
 8000e0c:	4832      	ldr	r0, [pc, #200]	@ (8000ed8 <_printf_i+0x238>)
 8000e0e:	2778      	movs	r7, #120	@ 0x78
 8000e10:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e14:	6823      	ldr	r3, [r4, #0]
 8000e16:	6831      	ldr	r1, [r6, #0]
 8000e18:	061f      	lsls	r7, r3, #24
 8000e1a:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e1e:	d402      	bmi.n	8000e26 <_printf_i+0x186>
 8000e20:	065f      	lsls	r7, r3, #25
 8000e22:	bf48      	it	mi
 8000e24:	b2ad      	uxthmi	r5, r5
 8000e26:	6031      	str	r1, [r6, #0]
 8000e28:	07d9      	lsls	r1, r3, #31
 8000e2a:	bf44      	itt	mi
 8000e2c:	f043 0320 	orrmi.w	r3, r3, #32
 8000e30:	6023      	strmi	r3, [r4, #0]
 8000e32:	b11d      	cbz	r5, 8000e3c <_printf_i+0x19c>
 8000e34:	2310      	movs	r3, #16
 8000e36:	e7ad      	b.n	8000d94 <_printf_i+0xf4>
 8000e38:	4826      	ldr	r0, [pc, #152]	@ (8000ed4 <_printf_i+0x234>)
 8000e3a:	e7e9      	b.n	8000e10 <_printf_i+0x170>
 8000e3c:	6823      	ldr	r3, [r4, #0]
 8000e3e:	f023 0320 	bic.w	r3, r3, #32
 8000e42:	6023      	str	r3, [r4, #0]
 8000e44:	e7f6      	b.n	8000e34 <_printf_i+0x194>
 8000e46:	4616      	mov	r6, r2
 8000e48:	e7bd      	b.n	8000dc6 <_printf_i+0x126>
 8000e4a:	6833      	ldr	r3, [r6, #0]
 8000e4c:	6825      	ldr	r5, [r4, #0]
 8000e4e:	6961      	ldr	r1, [r4, #20]
 8000e50:	1d18      	adds	r0, r3, #4
 8000e52:	6030      	str	r0, [r6, #0]
 8000e54:	062e      	lsls	r6, r5, #24
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	d501      	bpl.n	8000e5e <_printf_i+0x1be>
 8000e5a:	6019      	str	r1, [r3, #0]
 8000e5c:	e002      	b.n	8000e64 <_printf_i+0x1c4>
 8000e5e:	0668      	lsls	r0, r5, #25
 8000e60:	d5fb      	bpl.n	8000e5a <_printf_i+0x1ba>
 8000e62:	8019      	strh	r1, [r3, #0]
 8000e64:	2300      	movs	r3, #0
 8000e66:	6123      	str	r3, [r4, #16]
 8000e68:	4616      	mov	r6, r2
 8000e6a:	e7bc      	b.n	8000de6 <_printf_i+0x146>
 8000e6c:	6833      	ldr	r3, [r6, #0]
 8000e6e:	1d1a      	adds	r2, r3, #4
 8000e70:	6032      	str	r2, [r6, #0]
 8000e72:	681e      	ldr	r6, [r3, #0]
 8000e74:	6862      	ldr	r2, [r4, #4]
 8000e76:	2100      	movs	r1, #0
 8000e78:	4630      	mov	r0, r6
 8000e7a:	f7ff f9a9 	bl	80001d0 <memchr>
 8000e7e:	b108      	cbz	r0, 8000e84 <_printf_i+0x1e4>
 8000e80:	1b80      	subs	r0, r0, r6
 8000e82:	6060      	str	r0, [r4, #4]
 8000e84:	6863      	ldr	r3, [r4, #4]
 8000e86:	6123      	str	r3, [r4, #16]
 8000e88:	2300      	movs	r3, #0
 8000e8a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e8e:	e7aa      	b.n	8000de6 <_printf_i+0x146>
 8000e90:	6923      	ldr	r3, [r4, #16]
 8000e92:	4632      	mov	r2, r6
 8000e94:	4649      	mov	r1, r9
 8000e96:	4640      	mov	r0, r8
 8000e98:	47d0      	blx	sl
 8000e9a:	3001      	adds	r0, #1
 8000e9c:	d0ad      	beq.n	8000dfa <_printf_i+0x15a>
 8000e9e:	6823      	ldr	r3, [r4, #0]
 8000ea0:	079b      	lsls	r3, r3, #30
 8000ea2:	d413      	bmi.n	8000ecc <_printf_i+0x22c>
 8000ea4:	68e0      	ldr	r0, [r4, #12]
 8000ea6:	9b03      	ldr	r3, [sp, #12]
 8000ea8:	4298      	cmp	r0, r3
 8000eaa:	bfb8      	it	lt
 8000eac:	4618      	movlt	r0, r3
 8000eae:	e7a6      	b.n	8000dfe <_printf_i+0x15e>
 8000eb0:	2301      	movs	r3, #1
 8000eb2:	4632      	mov	r2, r6
 8000eb4:	4649      	mov	r1, r9
 8000eb6:	4640      	mov	r0, r8
 8000eb8:	47d0      	blx	sl
 8000eba:	3001      	adds	r0, #1
 8000ebc:	d09d      	beq.n	8000dfa <_printf_i+0x15a>
 8000ebe:	3501      	adds	r5, #1
 8000ec0:	68e3      	ldr	r3, [r4, #12]
 8000ec2:	9903      	ldr	r1, [sp, #12]
 8000ec4:	1a5b      	subs	r3, r3, r1
 8000ec6:	42ab      	cmp	r3, r5
 8000ec8:	dcf2      	bgt.n	8000eb0 <_printf_i+0x210>
 8000eca:	e7eb      	b.n	8000ea4 <_printf_i+0x204>
 8000ecc:	2500      	movs	r5, #0
 8000ece:	f104 0619 	add.w	r6, r4, #25
 8000ed2:	e7f5      	b.n	8000ec0 <_printf_i+0x220>
 8000ed4:	08001432 	.word	0x08001432
 8000ed8:	08001443 	.word	0x08001443

08000edc <__sflush_r>:
 8000edc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ee4:	0716      	lsls	r6, r2, #28
 8000ee6:	4605      	mov	r5, r0
 8000ee8:	460c      	mov	r4, r1
 8000eea:	d454      	bmi.n	8000f96 <__sflush_r+0xba>
 8000eec:	684b      	ldr	r3, [r1, #4]
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	dc02      	bgt.n	8000ef8 <__sflush_r+0x1c>
 8000ef2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000ef4:	2b00      	cmp	r3, #0
 8000ef6:	dd48      	ble.n	8000f8a <__sflush_r+0xae>
 8000ef8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000efa:	2e00      	cmp	r6, #0
 8000efc:	d045      	beq.n	8000f8a <__sflush_r+0xae>
 8000efe:	2300      	movs	r3, #0
 8000f00:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000f04:	682f      	ldr	r7, [r5, #0]
 8000f06:	6a21      	ldr	r1, [r4, #32]
 8000f08:	602b      	str	r3, [r5, #0]
 8000f0a:	d030      	beq.n	8000f6e <__sflush_r+0x92>
 8000f0c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f0e:	89a3      	ldrh	r3, [r4, #12]
 8000f10:	0759      	lsls	r1, r3, #29
 8000f12:	d505      	bpl.n	8000f20 <__sflush_r+0x44>
 8000f14:	6863      	ldr	r3, [r4, #4]
 8000f16:	1ad2      	subs	r2, r2, r3
 8000f18:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f1a:	b10b      	cbz	r3, 8000f20 <__sflush_r+0x44>
 8000f1c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f1e:	1ad2      	subs	r2, r2, r3
 8000f20:	2300      	movs	r3, #0
 8000f22:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f24:	6a21      	ldr	r1, [r4, #32]
 8000f26:	4628      	mov	r0, r5
 8000f28:	47b0      	blx	r6
 8000f2a:	1c43      	adds	r3, r0, #1
 8000f2c:	89a3      	ldrh	r3, [r4, #12]
 8000f2e:	d106      	bne.n	8000f3e <__sflush_r+0x62>
 8000f30:	6829      	ldr	r1, [r5, #0]
 8000f32:	291d      	cmp	r1, #29
 8000f34:	d82b      	bhi.n	8000f8e <__sflush_r+0xb2>
 8000f36:	4a2a      	ldr	r2, [pc, #168]	@ (8000fe0 <__sflush_r+0x104>)
 8000f38:	40ca      	lsrs	r2, r1
 8000f3a:	07d6      	lsls	r6, r2, #31
 8000f3c:	d527      	bpl.n	8000f8e <__sflush_r+0xb2>
 8000f3e:	2200      	movs	r2, #0
 8000f40:	6062      	str	r2, [r4, #4]
 8000f42:	04d9      	lsls	r1, r3, #19
 8000f44:	6922      	ldr	r2, [r4, #16]
 8000f46:	6022      	str	r2, [r4, #0]
 8000f48:	d504      	bpl.n	8000f54 <__sflush_r+0x78>
 8000f4a:	1c42      	adds	r2, r0, #1
 8000f4c:	d101      	bne.n	8000f52 <__sflush_r+0x76>
 8000f4e:	682b      	ldr	r3, [r5, #0]
 8000f50:	b903      	cbnz	r3, 8000f54 <__sflush_r+0x78>
 8000f52:	6560      	str	r0, [r4, #84]	@ 0x54
 8000f54:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000f56:	602f      	str	r7, [r5, #0]
 8000f58:	b1b9      	cbz	r1, 8000f8a <__sflush_r+0xae>
 8000f5a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000f5e:	4299      	cmp	r1, r3
 8000f60:	d002      	beq.n	8000f68 <__sflush_r+0x8c>
 8000f62:	4628      	mov	r0, r5
 8000f64:	f7ff fbf4 	bl	8000750 <_free_r>
 8000f68:	2300      	movs	r3, #0
 8000f6a:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f6c:	e00d      	b.n	8000f8a <__sflush_r+0xae>
 8000f6e:	2301      	movs	r3, #1
 8000f70:	4628      	mov	r0, r5
 8000f72:	47b0      	blx	r6
 8000f74:	4602      	mov	r2, r0
 8000f76:	1c50      	adds	r0, r2, #1
 8000f78:	d1c9      	bne.n	8000f0e <__sflush_r+0x32>
 8000f7a:	682b      	ldr	r3, [r5, #0]
 8000f7c:	2b00      	cmp	r3, #0
 8000f7e:	d0c6      	beq.n	8000f0e <__sflush_r+0x32>
 8000f80:	2b1d      	cmp	r3, #29
 8000f82:	d001      	beq.n	8000f88 <__sflush_r+0xac>
 8000f84:	2b16      	cmp	r3, #22
 8000f86:	d11e      	bne.n	8000fc6 <__sflush_r+0xea>
 8000f88:	602f      	str	r7, [r5, #0]
 8000f8a:	2000      	movs	r0, #0
 8000f8c:	e022      	b.n	8000fd4 <__sflush_r+0xf8>
 8000f8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f92:	b21b      	sxth	r3, r3
 8000f94:	e01b      	b.n	8000fce <__sflush_r+0xf2>
 8000f96:	690f      	ldr	r7, [r1, #16]
 8000f98:	2f00      	cmp	r7, #0
 8000f9a:	d0f6      	beq.n	8000f8a <__sflush_r+0xae>
 8000f9c:	0793      	lsls	r3, r2, #30
 8000f9e:	680e      	ldr	r6, [r1, #0]
 8000fa0:	bf08      	it	eq
 8000fa2:	694b      	ldreq	r3, [r1, #20]
 8000fa4:	600f      	str	r7, [r1, #0]
 8000fa6:	bf18      	it	ne
 8000fa8:	2300      	movne	r3, #0
 8000faa:	eba6 0807 	sub.w	r8, r6, r7
 8000fae:	608b      	str	r3, [r1, #8]
 8000fb0:	f1b8 0f00 	cmp.w	r8, #0
 8000fb4:	dde9      	ble.n	8000f8a <__sflush_r+0xae>
 8000fb6:	6a21      	ldr	r1, [r4, #32]
 8000fb8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000fba:	4643      	mov	r3, r8
 8000fbc:	463a      	mov	r2, r7
 8000fbe:	4628      	mov	r0, r5
 8000fc0:	47b0      	blx	r6
 8000fc2:	2800      	cmp	r0, #0
 8000fc4:	dc08      	bgt.n	8000fd8 <__sflush_r+0xfc>
 8000fc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fce:	81a3      	strh	r3, [r4, #12]
 8000fd0:	f04f 30ff 	mov.w	r0, #4294967295
 8000fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fd8:	4407      	add	r7, r0
 8000fda:	eba8 0800 	sub.w	r8, r8, r0
 8000fde:	e7e7      	b.n	8000fb0 <__sflush_r+0xd4>
 8000fe0:	20400001 	.word	0x20400001

08000fe4 <_fflush_r>:
 8000fe4:	b538      	push	{r3, r4, r5, lr}
 8000fe6:	690b      	ldr	r3, [r1, #16]
 8000fe8:	4605      	mov	r5, r0
 8000fea:	460c      	mov	r4, r1
 8000fec:	b913      	cbnz	r3, 8000ff4 <_fflush_r+0x10>
 8000fee:	2500      	movs	r5, #0
 8000ff0:	4628      	mov	r0, r5
 8000ff2:	bd38      	pop	{r3, r4, r5, pc}
 8000ff4:	b118      	cbz	r0, 8000ffe <_fflush_r+0x1a>
 8000ff6:	6a03      	ldr	r3, [r0, #32]
 8000ff8:	b90b      	cbnz	r3, 8000ffe <_fflush_r+0x1a>
 8000ffa:	f7ff faa1 	bl	8000540 <__sinit>
 8000ffe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001002:	2b00      	cmp	r3, #0
 8001004:	d0f3      	beq.n	8000fee <_fflush_r+0xa>
 8001006:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001008:	07d0      	lsls	r0, r2, #31
 800100a:	d404      	bmi.n	8001016 <_fflush_r+0x32>
 800100c:	0599      	lsls	r1, r3, #22
 800100e:	d402      	bmi.n	8001016 <_fflush_r+0x32>
 8001010:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001012:	f7ff fb9a 	bl	800074a <__retarget_lock_acquire_recursive>
 8001016:	4628      	mov	r0, r5
 8001018:	4621      	mov	r1, r4
 800101a:	f7ff ff5f 	bl	8000edc <__sflush_r>
 800101e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001020:	07da      	lsls	r2, r3, #31
 8001022:	4605      	mov	r5, r0
 8001024:	d4e4      	bmi.n	8000ff0 <_fflush_r+0xc>
 8001026:	89a3      	ldrh	r3, [r4, #12]
 8001028:	059b      	lsls	r3, r3, #22
 800102a:	d4e1      	bmi.n	8000ff0 <_fflush_r+0xc>
 800102c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800102e:	f7ff fb8d 	bl	800074c <__retarget_lock_release_recursive>
 8001032:	e7dd      	b.n	8000ff0 <_fflush_r+0xc>

08001034 <__swbuf_r>:
 8001034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001036:	460e      	mov	r6, r1
 8001038:	4614      	mov	r4, r2
 800103a:	4605      	mov	r5, r0
 800103c:	b118      	cbz	r0, 8001046 <__swbuf_r+0x12>
 800103e:	6a03      	ldr	r3, [r0, #32]
 8001040:	b90b      	cbnz	r3, 8001046 <__swbuf_r+0x12>
 8001042:	f7ff fa7d 	bl	8000540 <__sinit>
 8001046:	69a3      	ldr	r3, [r4, #24]
 8001048:	60a3      	str	r3, [r4, #8]
 800104a:	89a3      	ldrh	r3, [r4, #12]
 800104c:	071a      	lsls	r2, r3, #28
 800104e:	d501      	bpl.n	8001054 <__swbuf_r+0x20>
 8001050:	6923      	ldr	r3, [r4, #16]
 8001052:	b943      	cbnz	r3, 8001066 <__swbuf_r+0x32>
 8001054:	4621      	mov	r1, r4
 8001056:	4628      	mov	r0, r5
 8001058:	f000 f82a 	bl	80010b0 <__swsetup_r>
 800105c:	b118      	cbz	r0, 8001066 <__swbuf_r+0x32>
 800105e:	f04f 37ff 	mov.w	r7, #4294967295
 8001062:	4638      	mov	r0, r7
 8001064:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	6922      	ldr	r2, [r4, #16]
 800106a:	1a98      	subs	r0, r3, r2
 800106c:	6963      	ldr	r3, [r4, #20]
 800106e:	b2f6      	uxtb	r6, r6
 8001070:	4283      	cmp	r3, r0
 8001072:	4637      	mov	r7, r6
 8001074:	dc05      	bgt.n	8001082 <__swbuf_r+0x4e>
 8001076:	4621      	mov	r1, r4
 8001078:	4628      	mov	r0, r5
 800107a:	f7ff ffb3 	bl	8000fe4 <_fflush_r>
 800107e:	2800      	cmp	r0, #0
 8001080:	d1ed      	bne.n	800105e <__swbuf_r+0x2a>
 8001082:	68a3      	ldr	r3, [r4, #8]
 8001084:	3b01      	subs	r3, #1
 8001086:	60a3      	str	r3, [r4, #8]
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	1c5a      	adds	r2, r3, #1
 800108c:	6022      	str	r2, [r4, #0]
 800108e:	701e      	strb	r6, [r3, #0]
 8001090:	6962      	ldr	r2, [r4, #20]
 8001092:	1c43      	adds	r3, r0, #1
 8001094:	429a      	cmp	r2, r3
 8001096:	d004      	beq.n	80010a2 <__swbuf_r+0x6e>
 8001098:	89a3      	ldrh	r3, [r4, #12]
 800109a:	07db      	lsls	r3, r3, #31
 800109c:	d5e1      	bpl.n	8001062 <__swbuf_r+0x2e>
 800109e:	2e0a      	cmp	r6, #10
 80010a0:	d1df      	bne.n	8001062 <__swbuf_r+0x2e>
 80010a2:	4621      	mov	r1, r4
 80010a4:	4628      	mov	r0, r5
 80010a6:	f7ff ff9d 	bl	8000fe4 <_fflush_r>
 80010aa:	2800      	cmp	r0, #0
 80010ac:	d0d9      	beq.n	8001062 <__swbuf_r+0x2e>
 80010ae:	e7d6      	b.n	800105e <__swbuf_r+0x2a>

080010b0 <__swsetup_r>:
 80010b0:	b538      	push	{r3, r4, r5, lr}
 80010b2:	4b29      	ldr	r3, [pc, #164]	@ (8001158 <__swsetup_r+0xa8>)
 80010b4:	4605      	mov	r5, r0
 80010b6:	6818      	ldr	r0, [r3, #0]
 80010b8:	460c      	mov	r4, r1
 80010ba:	b118      	cbz	r0, 80010c4 <__swsetup_r+0x14>
 80010bc:	6a03      	ldr	r3, [r0, #32]
 80010be:	b90b      	cbnz	r3, 80010c4 <__swsetup_r+0x14>
 80010c0:	f7ff fa3e 	bl	8000540 <__sinit>
 80010c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010c8:	0719      	lsls	r1, r3, #28
 80010ca:	d422      	bmi.n	8001112 <__swsetup_r+0x62>
 80010cc:	06da      	lsls	r2, r3, #27
 80010ce:	d407      	bmi.n	80010e0 <__swsetup_r+0x30>
 80010d0:	2209      	movs	r2, #9
 80010d2:	602a      	str	r2, [r5, #0]
 80010d4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010d8:	81a3      	strh	r3, [r4, #12]
 80010da:	f04f 30ff 	mov.w	r0, #4294967295
 80010de:	e033      	b.n	8001148 <__swsetup_r+0x98>
 80010e0:	0758      	lsls	r0, r3, #29
 80010e2:	d512      	bpl.n	800110a <__swsetup_r+0x5a>
 80010e4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010e6:	b141      	cbz	r1, 80010fa <__swsetup_r+0x4a>
 80010e8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010ec:	4299      	cmp	r1, r3
 80010ee:	d002      	beq.n	80010f6 <__swsetup_r+0x46>
 80010f0:	4628      	mov	r0, r5
 80010f2:	f7ff fb2d 	bl	8000750 <_free_r>
 80010f6:	2300      	movs	r3, #0
 80010f8:	6363      	str	r3, [r4, #52]	@ 0x34
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001100:	81a3      	strh	r3, [r4, #12]
 8001102:	2300      	movs	r3, #0
 8001104:	6063      	str	r3, [r4, #4]
 8001106:	6923      	ldr	r3, [r4, #16]
 8001108:	6023      	str	r3, [r4, #0]
 800110a:	89a3      	ldrh	r3, [r4, #12]
 800110c:	f043 0308 	orr.w	r3, r3, #8
 8001110:	81a3      	strh	r3, [r4, #12]
 8001112:	6923      	ldr	r3, [r4, #16]
 8001114:	b94b      	cbnz	r3, 800112a <__swsetup_r+0x7a>
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800111c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001120:	d003      	beq.n	800112a <__swsetup_r+0x7a>
 8001122:	4621      	mov	r1, r4
 8001124:	4628      	mov	r0, r5
 8001126:	f000 f84f 	bl	80011c8 <__smakebuf_r>
 800112a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800112e:	f013 0201 	ands.w	r2, r3, #1
 8001132:	d00a      	beq.n	800114a <__swsetup_r+0x9a>
 8001134:	2200      	movs	r2, #0
 8001136:	60a2      	str	r2, [r4, #8]
 8001138:	6962      	ldr	r2, [r4, #20]
 800113a:	4252      	negs	r2, r2
 800113c:	61a2      	str	r2, [r4, #24]
 800113e:	6922      	ldr	r2, [r4, #16]
 8001140:	b942      	cbnz	r2, 8001154 <__swsetup_r+0xa4>
 8001142:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001146:	d1c5      	bne.n	80010d4 <__swsetup_r+0x24>
 8001148:	bd38      	pop	{r3, r4, r5, pc}
 800114a:	0799      	lsls	r1, r3, #30
 800114c:	bf58      	it	pl
 800114e:	6962      	ldrpl	r2, [r4, #20]
 8001150:	60a2      	str	r2, [r4, #8]
 8001152:	e7f4      	b.n	800113e <__swsetup_r+0x8e>
 8001154:	2000      	movs	r0, #0
 8001156:	e7f7      	b.n	8001148 <__swsetup_r+0x98>
 8001158:	2000000c 	.word	0x2000000c

0800115c <_sbrk_r>:
 800115c:	b538      	push	{r3, r4, r5, lr}
 800115e:	4d06      	ldr	r5, [pc, #24]	@ (8001178 <_sbrk_r+0x1c>)
 8001160:	2300      	movs	r3, #0
 8001162:	4604      	mov	r4, r0
 8001164:	4608      	mov	r0, r1
 8001166:	602b      	str	r3, [r5, #0]
 8001168:	f7ff f8fe 	bl	8000368 <_sbrk>
 800116c:	1c43      	adds	r3, r0, #1
 800116e:	d102      	bne.n	8001176 <_sbrk_r+0x1a>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	b103      	cbz	r3, 8001176 <_sbrk_r+0x1a>
 8001174:	6023      	str	r3, [r4, #0]
 8001176:	bd38      	pop	{r3, r4, r5, pc}
 8001178:	200001b8 	.word	0x200001b8

0800117c <__swhatbuf_r>:
 800117c:	b570      	push	{r4, r5, r6, lr}
 800117e:	460c      	mov	r4, r1
 8001180:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001184:	2900      	cmp	r1, #0
 8001186:	b096      	sub	sp, #88	@ 0x58
 8001188:	4615      	mov	r5, r2
 800118a:	461e      	mov	r6, r3
 800118c:	da0d      	bge.n	80011aa <__swhatbuf_r+0x2e>
 800118e:	89a3      	ldrh	r3, [r4, #12]
 8001190:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001194:	f04f 0100 	mov.w	r1, #0
 8001198:	bf14      	ite	ne
 800119a:	2340      	movne	r3, #64	@ 0x40
 800119c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80011a0:	2000      	movs	r0, #0
 80011a2:	6031      	str	r1, [r6, #0]
 80011a4:	602b      	str	r3, [r5, #0]
 80011a6:	b016      	add	sp, #88	@ 0x58
 80011a8:	bd70      	pop	{r4, r5, r6, pc}
 80011aa:	466a      	mov	r2, sp
 80011ac:	f000 f848 	bl	8001240 <_fstat_r>
 80011b0:	2800      	cmp	r0, #0
 80011b2:	dbec      	blt.n	800118e <__swhatbuf_r+0x12>
 80011b4:	9901      	ldr	r1, [sp, #4]
 80011b6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80011ba:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80011be:	4259      	negs	r1, r3
 80011c0:	4159      	adcs	r1, r3
 80011c2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011c6:	e7eb      	b.n	80011a0 <__swhatbuf_r+0x24>

080011c8 <__smakebuf_r>:
 80011c8:	898b      	ldrh	r3, [r1, #12]
 80011ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011cc:	079d      	lsls	r5, r3, #30
 80011ce:	4606      	mov	r6, r0
 80011d0:	460c      	mov	r4, r1
 80011d2:	d507      	bpl.n	80011e4 <__smakebuf_r+0x1c>
 80011d4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80011d8:	6023      	str	r3, [r4, #0]
 80011da:	6123      	str	r3, [r4, #16]
 80011dc:	2301      	movs	r3, #1
 80011de:	6163      	str	r3, [r4, #20]
 80011e0:	b003      	add	sp, #12
 80011e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011e4:	ab01      	add	r3, sp, #4
 80011e6:	466a      	mov	r2, sp
 80011e8:	f7ff ffc8 	bl	800117c <__swhatbuf_r>
 80011ec:	9f00      	ldr	r7, [sp, #0]
 80011ee:	4605      	mov	r5, r0
 80011f0:	4639      	mov	r1, r7
 80011f2:	4630      	mov	r0, r6
 80011f4:	f7ff fb18 	bl	8000828 <_malloc_r>
 80011f8:	b948      	cbnz	r0, 800120e <__smakebuf_r+0x46>
 80011fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011fe:	059a      	lsls	r2, r3, #22
 8001200:	d4ee      	bmi.n	80011e0 <__smakebuf_r+0x18>
 8001202:	f023 0303 	bic.w	r3, r3, #3
 8001206:	f043 0302 	orr.w	r3, r3, #2
 800120a:	81a3      	strh	r3, [r4, #12]
 800120c:	e7e2      	b.n	80011d4 <__smakebuf_r+0xc>
 800120e:	89a3      	ldrh	r3, [r4, #12]
 8001210:	6020      	str	r0, [r4, #0]
 8001212:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001216:	81a3      	strh	r3, [r4, #12]
 8001218:	9b01      	ldr	r3, [sp, #4]
 800121a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800121e:	b15b      	cbz	r3, 8001238 <__smakebuf_r+0x70>
 8001220:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001224:	4630      	mov	r0, r6
 8001226:	f000 f81d 	bl	8001264 <_isatty_r>
 800122a:	b128      	cbz	r0, 8001238 <__smakebuf_r+0x70>
 800122c:	89a3      	ldrh	r3, [r4, #12]
 800122e:	f023 0303 	bic.w	r3, r3, #3
 8001232:	f043 0301 	orr.w	r3, r3, #1
 8001236:	81a3      	strh	r3, [r4, #12]
 8001238:	89a3      	ldrh	r3, [r4, #12]
 800123a:	431d      	orrs	r5, r3
 800123c:	81a5      	strh	r5, [r4, #12]
 800123e:	e7cf      	b.n	80011e0 <__smakebuf_r+0x18>

08001240 <_fstat_r>:
 8001240:	b538      	push	{r3, r4, r5, lr}
 8001242:	4d07      	ldr	r5, [pc, #28]	@ (8001260 <_fstat_r+0x20>)
 8001244:	2300      	movs	r3, #0
 8001246:	4604      	mov	r4, r0
 8001248:	4608      	mov	r0, r1
 800124a:	4611      	mov	r1, r2
 800124c:	602b      	str	r3, [r5, #0]
 800124e:	f7ff f87a 	bl	8000346 <_fstat>
 8001252:	1c43      	adds	r3, r0, #1
 8001254:	d102      	bne.n	800125c <_fstat_r+0x1c>
 8001256:	682b      	ldr	r3, [r5, #0]
 8001258:	b103      	cbz	r3, 800125c <_fstat_r+0x1c>
 800125a:	6023      	str	r3, [r4, #0]
 800125c:	bd38      	pop	{r3, r4, r5, pc}
 800125e:	bf00      	nop
 8001260:	200001b8 	.word	0x200001b8

08001264 <_isatty_r>:
 8001264:	b538      	push	{r3, r4, r5, lr}
 8001266:	4d06      	ldr	r5, [pc, #24]	@ (8001280 <_isatty_r+0x1c>)
 8001268:	2300      	movs	r3, #0
 800126a:	4604      	mov	r4, r0
 800126c:	4608      	mov	r0, r1
 800126e:	602b      	str	r3, [r5, #0]
 8001270:	f000 f8a6 	bl	80013c0 <_isatty>
 8001274:	1c43      	adds	r3, r0, #1
 8001276:	d102      	bne.n	800127e <_isatty_r+0x1a>
 8001278:	682b      	ldr	r3, [r5, #0]
 800127a:	b103      	cbz	r3, 800127e <_isatty_r+0x1a>
 800127c:	6023      	str	r3, [r4, #0]
 800127e:	bd38      	pop	{r3, r4, r5, pc}
 8001280:	200001b8 	.word	0x200001b8

08001284 <findslot>:
 8001284:	4b0a      	ldr	r3, [pc, #40]	@ (80012b0 <findslot+0x2c>)
 8001286:	b510      	push	{r4, lr}
 8001288:	4604      	mov	r4, r0
 800128a:	6818      	ldr	r0, [r3, #0]
 800128c:	b118      	cbz	r0, 8001296 <findslot+0x12>
 800128e:	6a03      	ldr	r3, [r0, #32]
 8001290:	b90b      	cbnz	r3, 8001296 <findslot+0x12>
 8001292:	f7ff f955 	bl	8000540 <__sinit>
 8001296:	2c13      	cmp	r4, #19
 8001298:	d807      	bhi.n	80012aa <findslot+0x26>
 800129a:	4806      	ldr	r0, [pc, #24]	@ (80012b4 <findslot+0x30>)
 800129c:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80012a0:	3201      	adds	r2, #1
 80012a2:	d002      	beq.n	80012aa <findslot+0x26>
 80012a4:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80012a8:	bd10      	pop	{r4, pc}
 80012aa:	2000      	movs	r0, #0
 80012ac:	e7fc      	b.n	80012a8 <findslot+0x24>
 80012ae:	bf00      	nop
 80012b0:	2000000c 	.word	0x2000000c
 80012b4:	200001c8 	.word	0x200001c8

080012b8 <error>:
 80012b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012ba:	4604      	mov	r4, r0
 80012bc:	f7ff fa1a 	bl	80006f4 <__errno>
 80012c0:	2613      	movs	r6, #19
 80012c2:	4605      	mov	r5, r0
 80012c4:	2700      	movs	r7, #0
 80012c6:	4630      	mov	r0, r6
 80012c8:	4639      	mov	r1, r7
 80012ca:	beab      	bkpt	0x00ab
 80012cc:	4606      	mov	r6, r0
 80012ce:	602e      	str	r6, [r5, #0]
 80012d0:	4620      	mov	r0, r4
 80012d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080012d4 <checkerror>:
 80012d4:	1c43      	adds	r3, r0, #1
 80012d6:	d101      	bne.n	80012dc <checkerror+0x8>
 80012d8:	f7ff bfee 	b.w	80012b8 <error>
 80012dc:	4770      	bx	lr

080012de <_swilseek>:
 80012de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012e0:	460c      	mov	r4, r1
 80012e2:	4616      	mov	r6, r2
 80012e4:	f7ff ffce 	bl	8001284 <findslot>
 80012e8:	4605      	mov	r5, r0
 80012ea:	b940      	cbnz	r0, 80012fe <_swilseek+0x20>
 80012ec:	f7ff fa02 	bl	80006f4 <__errno>
 80012f0:	2309      	movs	r3, #9
 80012f2:	6003      	str	r3, [r0, #0]
 80012f4:	f04f 34ff 	mov.w	r4, #4294967295
 80012f8:	4620      	mov	r0, r4
 80012fa:	b003      	add	sp, #12
 80012fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012fe:	2e02      	cmp	r6, #2
 8001300:	d903      	bls.n	800130a <_swilseek+0x2c>
 8001302:	f7ff f9f7 	bl	80006f4 <__errno>
 8001306:	2316      	movs	r3, #22
 8001308:	e7f3      	b.n	80012f2 <_swilseek+0x14>
 800130a:	2e01      	cmp	r6, #1
 800130c:	d112      	bne.n	8001334 <_swilseek+0x56>
 800130e:	6843      	ldr	r3, [r0, #4]
 8001310:	18e4      	adds	r4, r4, r3
 8001312:	d4f6      	bmi.n	8001302 <_swilseek+0x24>
 8001314:	682b      	ldr	r3, [r5, #0]
 8001316:	260a      	movs	r6, #10
 8001318:	e9cd 3400 	strd	r3, r4, [sp]
 800131c:	466f      	mov	r7, sp
 800131e:	4630      	mov	r0, r6
 8001320:	4639      	mov	r1, r7
 8001322:	beab      	bkpt	0x00ab
 8001324:	4606      	mov	r6, r0
 8001326:	4630      	mov	r0, r6
 8001328:	f7ff ffd4 	bl	80012d4 <checkerror>
 800132c:	2800      	cmp	r0, #0
 800132e:	dbe1      	blt.n	80012f4 <_swilseek+0x16>
 8001330:	606c      	str	r4, [r5, #4]
 8001332:	e7e1      	b.n	80012f8 <_swilseek+0x1a>
 8001334:	2e02      	cmp	r6, #2
 8001336:	6803      	ldr	r3, [r0, #0]
 8001338:	d1ec      	bne.n	8001314 <_swilseek+0x36>
 800133a:	9300      	str	r3, [sp, #0]
 800133c:	260c      	movs	r6, #12
 800133e:	466f      	mov	r7, sp
 8001340:	4630      	mov	r0, r6
 8001342:	4639      	mov	r1, r7
 8001344:	beab      	bkpt	0x00ab
 8001346:	4606      	mov	r6, r0
 8001348:	4630      	mov	r0, r6
 800134a:	f7ff ffc3 	bl	80012d4 <checkerror>
 800134e:	1c43      	adds	r3, r0, #1
 8001350:	d0d0      	beq.n	80012f4 <_swilseek+0x16>
 8001352:	4404      	add	r4, r0
 8001354:	e7de      	b.n	8001314 <_swilseek+0x36>

08001356 <_lseek>:
 8001356:	f7ff bfc2 	b.w	80012de <_swilseek>

0800135a <_swiclose>:
 800135a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800135c:	2402      	movs	r4, #2
 800135e:	9001      	str	r0, [sp, #4]
 8001360:	ad01      	add	r5, sp, #4
 8001362:	4620      	mov	r0, r4
 8001364:	4629      	mov	r1, r5
 8001366:	beab      	bkpt	0x00ab
 8001368:	4604      	mov	r4, r0
 800136a:	4620      	mov	r0, r4
 800136c:	f7ff ffb2 	bl	80012d4 <checkerror>
 8001370:	b003      	add	sp, #12
 8001372:	bd30      	pop	{r4, r5, pc}

08001374 <_close>:
 8001374:	b538      	push	{r3, r4, r5, lr}
 8001376:	4605      	mov	r5, r0
 8001378:	f7ff ff84 	bl	8001284 <findslot>
 800137c:	4604      	mov	r4, r0
 800137e:	b930      	cbnz	r0, 800138e <_close+0x1a>
 8001380:	f7ff f9b8 	bl	80006f4 <__errno>
 8001384:	2309      	movs	r3, #9
 8001386:	6003      	str	r3, [r0, #0]
 8001388:	f04f 30ff 	mov.w	r0, #4294967295
 800138c:	bd38      	pop	{r3, r4, r5, pc}
 800138e:	3d01      	subs	r5, #1
 8001390:	2d01      	cmp	r5, #1
 8001392:	d809      	bhi.n	80013a8 <_close+0x34>
 8001394:	4b09      	ldr	r3, [pc, #36]	@ (80013bc <_close+0x48>)
 8001396:	689a      	ldr	r2, [r3, #8]
 8001398:	691b      	ldr	r3, [r3, #16]
 800139a:	429a      	cmp	r2, r3
 800139c:	d104      	bne.n	80013a8 <_close+0x34>
 800139e:	f04f 33ff 	mov.w	r3, #4294967295
 80013a2:	6003      	str	r3, [r0, #0]
 80013a4:	2000      	movs	r0, #0
 80013a6:	e7f1      	b.n	800138c <_close+0x18>
 80013a8:	6820      	ldr	r0, [r4, #0]
 80013aa:	f7ff ffd6 	bl	800135a <_swiclose>
 80013ae:	2800      	cmp	r0, #0
 80013b0:	d1ec      	bne.n	800138c <_close+0x18>
 80013b2:	f04f 33ff 	mov.w	r3, #4294967295
 80013b6:	6023      	str	r3, [r4, #0]
 80013b8:	e7e8      	b.n	800138c <_close+0x18>
 80013ba:	bf00      	nop
 80013bc:	200001c8 	.word	0x200001c8

080013c0 <_isatty>:
 80013c0:	b570      	push	{r4, r5, r6, lr}
 80013c2:	f7ff ff5f 	bl	8001284 <findslot>
 80013c6:	2409      	movs	r4, #9
 80013c8:	4605      	mov	r5, r0
 80013ca:	b920      	cbnz	r0, 80013d6 <_isatty+0x16>
 80013cc:	f7ff f992 	bl	80006f4 <__errno>
 80013d0:	6004      	str	r4, [r0, #0]
 80013d2:	2000      	movs	r0, #0
 80013d4:	bd70      	pop	{r4, r5, r6, pc}
 80013d6:	4620      	mov	r0, r4
 80013d8:	4629      	mov	r1, r5
 80013da:	beab      	bkpt	0x00ab
 80013dc:	4604      	mov	r4, r0
 80013de:	2c01      	cmp	r4, #1
 80013e0:	4620      	mov	r0, r4
 80013e2:	d0f7      	beq.n	80013d4 <_isatty+0x14>
 80013e4:	f7ff f986 	bl	80006f4 <__errno>
 80013e8:	2513      	movs	r5, #19
 80013ea:	4604      	mov	r4, r0
 80013ec:	2600      	movs	r6, #0
 80013ee:	4628      	mov	r0, r5
 80013f0:	4631      	mov	r1, r6
 80013f2:	beab      	bkpt	0x00ab
 80013f4:	4605      	mov	r5, r0
 80013f6:	6025      	str	r5, [r4, #0]
 80013f8:	e7eb      	b.n	80013d2 <_isatty+0x12>
	...

080013fc <_init>:
 80013fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013fe:	bf00      	nop
 8001400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001402:	bc08      	pop	{r3}
 8001404:	469e      	mov	lr, r3
 8001406:	4770      	bx	lr

08001408 <_fini>:
 8001408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140a:	bf00      	nop
 800140c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800140e:	bc08      	pop	{r3}
 8001410:	469e      	mov	lr, r3
 8001412:	4770      	bx	lr
